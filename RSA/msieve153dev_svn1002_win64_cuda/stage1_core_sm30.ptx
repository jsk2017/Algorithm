//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-21112126
// Cuda compilation tools, release 8.0, V8.0.43
// Based on LLVM 3.4svn
//

.version 5.0
.target sm_20
.address_size 64

	// .globl	sieve_kernel_trans_pp32_r32

.visible .entry sieve_kernel_trans_pp32_r32(
	.param .u64 sieve_kernel_trans_pp32_r32_param_0,
	.param .u32 sieve_kernel_trans_pp32_r32_param_1,
	.param .u64 sieve_kernel_trans_pp32_r32_param_2,
	.param .u32 sieve_kernel_trans_pp32_r32_param_3,
	.param .u64 sieve_kernel_trans_pp32_r32_param_4,
	.param .u64 sieve_kernel_trans_pp32_r32_param_5,
	.param .u64 sieve_kernel_trans_pp32_r32_param_6,
	.param .u32 sieve_kernel_trans_pp32_r32_param_7,
	.param .u32 sieve_kernel_trans_pp32_r32_param_8,
	.param .u32 sieve_kernel_trans_pp32_r32_param_9,
	.param .u32 sieve_kernel_trans_pp32_r32_param_10,
	.param .u32 sieve_kernel_trans_pp32_r32_param_11
)
{
	.reg .pred 	%p<78>;
	.reg .b32 	%r<473>;
	.reg .b64 	%rd<95>;


	ld.param.u64 	%rd40, [sieve_kernel_trans_pp32_r32_param_0];
	ld.param.u32 	%r161, [sieve_kernel_trans_pp32_r32_param_1];
	ld.param.u64 	%rd41, [sieve_kernel_trans_pp32_r32_param_2];
	ld.param.u32 	%r162, [sieve_kernel_trans_pp32_r32_param_3];
	ld.param.u64 	%rd43, [sieve_kernel_trans_pp32_r32_param_4];
	ld.param.u64 	%rd44, [sieve_kernel_trans_pp32_r32_param_5];
	ld.param.u64 	%rd42, [sieve_kernel_trans_pp32_r32_param_6];
	ld.param.u32 	%r163, [sieve_kernel_trans_pp32_r32_param_7];
	ld.param.u32 	%r164, [sieve_kernel_trans_pp32_r32_param_8];
	ld.param.u32 	%r165, [sieve_kernel_trans_pp32_r32_param_9];
	ld.param.u32 	%r166, [sieve_kernel_trans_pp32_r32_param_10];
	ld.param.u32 	%r167, [sieve_kernel_trans_pp32_r32_param_11];
	cvta.to.global.u64 	%rd1, %rd43;
	cvta.to.global.u64 	%rd2, %rd44;
	cvta.to.global.u64 	%rd3, %rd42;
	mov.u32 	%r168, %ntid.x;
	mov.u32 	%r169, %ctaid.x;
	mov.u32 	%r170, %tid.x;
	mad.lo.s32 	%r1, %r168, %r169, %r170;
	setp.ge.u32	%p5, %r1, %r161;
	@%p5 bra 	BB0_76;

	cvta.to.global.u64 	%rd45, %rd40;
	mul.wide.u32 	%rd46, %r1, 4;
	add.s64 	%rd47, %rd45, %rd46;
	ld.global.u32 	%r2, [%rd47];
	mul.lo.s32 	%r3, %r2, %r2;
	add.s32 	%r174, %r3, 2;
	mad.lo.s32 	%r175, %r174, %r3, 2;
	mul.lo.s32 	%r176, %r175, %r174;
	mad.lo.s32 	%r177, %r176, %r3, 2;
	mul.lo.s32 	%r178, %r177, %r176;
	mad.lo.s32 	%r179, %r178, %r3, 2;
	mul.lo.s32 	%r180, %r179, %r178;
	mad.lo.s32 	%r181, %r180, %r3, 2;
	mul.lo.s32 	%r4, %r181, %r180;
	mov.u32 	%r182, %ctaid.y;
	mul.lo.s32 	%r352, %r182, %r164;
	add.s32 	%r183, %r352, %r164;
	min.u32 	%r6, %r183, %r163;
	mul.lo.s32 	%r7, %r165, %r163;
	mad.lo.s32 	%r469, %r352, %r165, %r1;
	mul.wide.u32 	%rd48, %r352, 24;
	add.s64 	%rd89, %rd3, %rd48;
	mov.u32 	%r401, 0;
	mov.u32 	%r403, %r401;
	mov.pred 	%p76, -1;
	setp.ge.u32	%p7, %r352, %r6;
	@%p7 bra 	BB0_11;

	mul.lo.s32 	%r353, %r182, %r164;
	mul.wide.u32 	%rd49, %r353, 24;
	add.s64 	%rd89, %rd3, %rd49;
	mad.lo.s32 	%r470, %r353, %r165, %r1;
	mov.u32 	%r185, 0;
	mov.u32 	%r407, %r185;

BB0_3:
	mov.u32 	%r386, %r407;
	mov.u32 	%r382, %r405;
	mov.u32 	%r408, %r386;
	mov.u32 	%r406, %r382;
	ld.global.u32 	%r15, [%rd89];
	setp.eq.s32	%p8, %r408, %r15;
	mov.u32 	%r335, %r2;
	mov.u32 	%r404, %r185;
	mov.u32 	%r409, %r15;
	@%p8 bra 	BB0_10;

BB0_4:
	mov.u32 	%r17, %r409;
	mov.u32 	%r16, %r335;
	neg.s32 	%r188, %r17;
	and.b32  	%r189, %r17, %r188;
	clz.b32 	%r190, %r189;
	mov.u32 	%r191, 31;
	sub.s32 	%r192, %r191, %r190;
	shr.u32 	%r193, %r17, %r192;
	min.u32 	%r18, %r16, %r193;
	max.u32 	%r194, %r16, %r193;
	sub.s32 	%r19, %r194, %r18;
	setp.ne.s32	%p9, %r194, %r18;
	mov.u32 	%r335, %r18;
	mov.u32 	%r409, %r19;
	@%p9 bra 	BB0_4;

	setp.ne.s32	%p10, %r18, 1;
	mov.u32 	%r355, %r185;
	mov.u32 	%r408, %r15;
	mov.u32 	%r404, %r355;
	@%p10 bra 	BB0_10;

	ld.global.u64 	%rd7, [%rd89+8];
	and.b64  	%rd50, %rd7, -4294967296;
	setp.eq.s64	%p11, %rd50, 0;
	@%p11 bra 	BB0_8;
	bra.uni 	BB0_7;

BB0_8:
	cvt.u32.u64	%r196, %rd7;
	rem.u32 	%r197, %r196, %r3;
	cvt.u64.u32	%rd88, %r197;
	bra.uni 	BB0_9;

BB0_7:
	cvt.u64.u32	%rd51, %r3;
	rem.u64 	%rd88, %rd7, %rd51;

BB0_9:
	cvt.u32.u64	%r406, %rd88;
	mov.u32 	%r408, %r15;
	mov.u32 	%r358, %r406;
	mov.u32 	%r404, %r358;

BB0_10:
	mov.u32 	%r359, %r404;
	mov.u32 	%r407, %r408;
	mov.u32 	%r405, %r406;
	mov.u32 	%r403, %r359;
	mul.wide.u32 	%rd52, %r470, 4;
	add.s64 	%rd53, %rd2, %rd52;
	st.global.u32 	[%rd53], %r403;
	add.s32 	%r470, %r470, %r165;
	add.s64 	%rd89, %rd89, 24;
	add.s32 	%r353, %r353, 1;
	setp.lt.u32	%p12, %r353, %r6;
	setp.eq.s32	%p76, %r403, 0;
	and.pred  	%p13, %p76, %p12;
	mov.u32 	%r352, %r353;
	mov.u32 	%r402, %r405;
	mov.u32 	%r401, %r407;
	mov.u32 	%r469, %r470;
	@%p13 bra 	BB0_3;

BB0_11:
	mov.u32 	%r467, %r469;
	mov.u32 	%r394, %r402;
	mov.u32 	%r395, %r401;
	mov.u32 	%r399, %r403;
	mov.u32 	%r350, %r352;
	@%p76 bra 	BB0_76;

	add.s32 	%r31, %r350, -1;
	setp.ge.u32	%p14, %r350, %r6;
	@%p14 bra 	BB0_22;

	cvt.u64.u32	%rd13, %r3;
	mov.u32 	%r351, %r350;
	mov.u32 	%r397, %r394;
	mov.u32 	%r468, %r467;

BB0_14:
	mov.u32 	%r377, %r399;
	mov.u32 	%r373, %r397;
	mov.u32 	%r371, %r395;
	mov.u32 	%r400, %r377;
	mov.u32 	%r35, %r373;
	mov.u32 	%r396, %r371;
	ld.global.u32 	%r37, [%rd89];
	setp.eq.s32	%p15, %r396, %r37;
	mov.u32 	%r334, %r2;
	mov.u32 	%r398, %r35;
	mov.u32 	%r410, %r37;
	@%p15 bra 	BB0_21;

BB0_15:
	mov.u32 	%r39, %r410;
	mov.u32 	%r38, %r334;
	neg.s32 	%r198, %r39;
	and.b32  	%r199, %r39, %r198;
	clz.b32 	%r200, %r199;
	mov.u32 	%r201, 31;
	sub.s32 	%r202, %r201, %r200;
	shr.u32 	%r203, %r39, %r202;
	min.u32 	%r334, %r38, %r203;
	max.u32 	%r204, %r38, %r203;
	sub.s32 	%r41, %r204, %r334;
	setp.ne.s32	%p16, %r204, %r334;
	mov.u32 	%r410, %r41;
	@%p16 bra 	BB0_15;

	mov.u32 	%r400, 0;
	setp.ne.s32	%p17, %r334, 1;
	mov.u32 	%r396, %r37;
	mov.u32 	%r374, %r35;
	mov.u32 	%r398, %r374;
	@%p17 bra 	BB0_21;

	ld.global.u64 	%rd15, [%rd89+8];
	and.b64  	%rd54, %rd15, -4294967296;
	setp.eq.s64	%p18, %rd54, 0;
	@%p18 bra 	BB0_19;
	bra.uni 	BB0_18;

BB0_19:
	cvt.u32.u64	%r206, %rd13;
	cvt.u32.u64	%r207, %rd15;
	rem.u32 	%r208, %r207, %r206;
	cvt.u64.u32	%rd90, %r208;
	bra.uni 	BB0_20;

BB0_18:
	rem.u64 	%rd90, %rd15, %rd13;

BB0_20:
	cvt.u32.u64	%r218, %rd90;
	mul.lo.s32 	%r215, %r218, %r35;
	mul.hi.u32 	%r216, %r35, %r218;
	mul.lo.s32 	%r219, %r215, %r4;
	mul.lo.s32 	%r212, %r219, %r3;
	mul.hi.u32 	%r213, %r219, %r3;
	mov.u32 	%r217, 0;
	mov.u32 	%r209, %r215;
	mov.u32 	%r211, %r217;
	mov.u32 	%r210, %r216;
	// inline asm
	add.cc.u32 %r209, %r209, %r212;   /* inline */   
	addc.cc.u32 %r210, %r210, %r213;   /* inline */   
	addc.u32 %r211, %r211, %r211;   /* inline */   
	
	// inline asm
	setp.ne.s32	%p19, %r211, 0;
	setp.ge.u32	%p20, %r210, %r3;
	or.pred  	%p21, %p19, %p20;
	selp.b32	%r220, %r3, 0, %p21;
	sub.s32 	%r398, %r210, %r220;
	mov.u32 	%r396, %r37;
	mov.u32 	%r400, %r398;

BB0_21:
	mov.u32 	%r399, %r400;
	mov.u32 	%r397, %r398;
	mov.u32 	%r395, %r396;
	mul.wide.u32 	%rd55, %r468, 4;
	add.s64 	%rd56, %rd2, %rd55;
	st.global.u32 	[%rd56], %r399;
	add.s32 	%r468, %r468, %r165;
	add.s64 	%rd89, %rd89, 24;
	add.s32 	%r351, %r351, 1;
	setp.lt.u32	%p22, %r351, %r6;
	mov.u32 	%r350, %r351;
	mov.u32 	%r394, %r397;
	mov.u32 	%r467, %r468;
	@%p22 bra 	BB0_14;

BB0_22:
	mov.u32 	%r466, %r467;
	mov.u32 	%r50, %r394;
	mov.u32 	%r349, %r350;
	mov.u32 	%r340, 1;
	mov.pred 	%p77, -1;
	mov.u32 	%r343, %r340;
	mov.u32 	%r342, 0;
	mov.u32 	%r336, %r342;
	setp.lt.u32	%p24, %r50, 2;
	@%p24 bra 	BB0_36;

	mov.u32 	%r391, %r3;
	mov.u32 	%r392, %r50;

BB0_24:
	mov.u32 	%r368, %r392;
	mov.u32 	%r53, %r391;
	mov.u32 	%r54, %r368;
	mov.u32 	%r338, %r343;
	mov.u32 	%r55, %r338;
	mov.u32 	%r51, %r336;
	sub.s32 	%r56, %r53, %r54;
	sub.s32 	%r57, %r56, %r54;
	setp.lt.u32	%p25, %r56, %r54;
	mov.u32 	%r341, %r55;
	mov.u32 	%r393, %r56;
	@%p25 bra 	BB0_34;

	add.s32 	%r58, %r55, %r55;
	sub.s32 	%r59, %r57, %r54;
	setp.lt.u32	%p26, %r57, %r54;
	mov.u32 	%r341, %r58;
	mov.u32 	%r393, %r57;
	@%p26 bra 	BB0_34;

	add.s32 	%r60, %r58, %r55;
	sub.s32 	%r61, %r59, %r54;
	setp.lt.u32	%p27, %r59, %r54;
	mov.u32 	%r341, %r60;
	mov.u32 	%r393, %r59;
	@%p27 bra 	BB0_34;

	add.s32 	%r62, %r60, %r55;
	sub.s32 	%r63, %r61, %r54;
	setp.lt.u32	%p28, %r61, %r54;
	mov.u32 	%r341, %r62;
	mov.u32 	%r393, %r61;
	@%p28 bra 	BB0_34;

	add.s32 	%r64, %r62, %r55;
	sub.s32 	%r65, %r63, %r54;
	setp.lt.u32	%p29, %r63, %r54;
	mov.u32 	%r341, %r64;
	mov.u32 	%r393, %r63;
	@%p29 bra 	BB0_34;

	add.s32 	%r66, %r64, %r55;
	sub.s32 	%r67, %r65, %r54;
	setp.lt.u32	%p30, %r65, %r54;
	mov.u32 	%r341, %r66;
	mov.u32 	%r393, %r65;
	@%p30 bra 	BB0_34;

	add.s32 	%r68, %r66, %r55;
	sub.s32 	%r69, %r67, %r54;
	setp.lt.u32	%p31, %r67, %r54;
	mov.u32 	%r341, %r68;
	mov.u32 	%r393, %r67;
	@%p31 bra 	BB0_34;

	add.s32 	%r70, %r68, %r55;
	sub.s32 	%r71, %r69, %r54;
	setp.lt.u32	%p32, %r69, %r54;
	mov.u32 	%r341, %r70;
	mov.u32 	%r393, %r69;
	@%p32 bra 	BB0_34;

	add.s32 	%r72, %r70, %r55;
	setp.lt.u32	%p33, %r71, %r54;
	mov.u32 	%r341, %r72;
	mov.u32 	%r393, %r71;
	@%p33 bra 	BB0_34;

	div.u32 	%r225, %r53, %r54;
	mul.lo.s32 	%r226, %r225, %r54;
	sub.s32 	%r393, %r53, %r226;
	mul.lo.s32 	%r74, %r225, %r55;
	mov.u32 	%r341, %r74;

BB0_34:
	mov.u32 	%r76, %r393;
	mov.u32 	%r75, %r341;
	add.s32 	%r343, %r75, %r342;
	not.b32 	%r336, %r51;
	setp.gt.u32	%p34, %r76, 1;
	mov.u32 	%r342, %r55;
	mov.u32 	%r391, %r54;
	mov.u32 	%r392, %r76;
	@%p34 bra 	BB0_24;

	setp.eq.s32	%p77, %r51, -1;
	mov.u32 	%r340, %r343;

BB0_36:
	sub.s32 	%r227, %r3, %r340;
	selp.b32	%r80, %r340, %r227, %p77;
	cvt.u64.u32	%rd20, %r3;
	mov.pred 	%p35, 0;
	@%p35 bra 	BB0_38;

	mov.u64 	%rd57, -9223372036854775808;
	rem.u64 	%rd91, %rd57, %rd20;
	bra.uni 	BB0_39;

BB0_38:
	cvt.u32.u64	%r228, %rd20;
	mov.u32 	%r229, 0;
	rem.u32 	%r230, %r229, %r228;
	cvt.u64.u32	%rd91, %r230;

BB0_39:
	cvt.u32.u64	%r244, %rd91;
	add.s32 	%r245, %r244, %r244;
	setp.lt.u32	%p36, %r245, %r244;
	selp.b32	%r246, %r3, 0, %p36;
	sub.s32 	%r232, %r245, %r246;
	// inline asm
	{  
	.reg .pred %pborrow;           
	.reg .u32 %borrow;           
	mov.b32 %borrow, 0;           
	sub.cc.u32 %r231, %r232, %r3;        
	subc.u32 %borrow, %borrow, 0; 
	setp.ne.u32 %pborrow, %borrow, 0;  
	@%pborrow add.u32 %r231, %r231, %r3; 
	} 
	
	// inline asm
	mul.lo.s32 	%r241, %r231, %r80;
	mul.hi.u32 	%r242, %r80, %r231;
	mul.lo.s32 	%r247, %r241, %r4;
	mul.lo.s32 	%r238, %r247, %r3;
	mul.hi.u32 	%r239, %r247, %r3;
	mov.u32 	%r243, 0;
	mov.u32 	%r237, %r243;
	mov.u32 	%r236, %r242;
	mov.u32 	%r235, %r241;
	// inline asm
	add.cc.u32 %r235, %r235, %r238;   /* inline */   
	addc.cc.u32 %r236, %r236, %r239;   /* inline */   
	addc.u32 %r237, %r237, %r237;   /* inline */   
	
	// inline asm
	setp.ne.s32	%p37, %r237, 0;
	setp.ge.u32	%p38, %r236, %r3;
	or.pred  	%p39, %p37, %p38;
	selp.b32	%r248, %r3, 0, %p39;
	sub.s32 	%r421, %r236, %r248;

BB0_40:
	mov.u32 	%r83, %r349;
	sub.s32 	%r466, %r466, %r165;
	add.s32 	%r430, %r83, -1;
	setp.le.u32	%p40, %r430, %r31;
	@%p40 bra 	BB0_42;

	mul.wide.u32 	%rd58, %r466, 4;
	add.s64 	%rd59, %rd2, %rd58;
	ld.global.u32 	%r250, [%rd59];
	setp.eq.s32	%p41, %r250, 0;
	add.s32 	%r349, %r83, -1;
	@%p41 bra 	BB0_40;

BB0_42:
	add.s32 	%r434, %r83, -2;
	setp.lt.s32	%p42, %r434, %r31;
	mov.u32 	%r459, %r466;
	@%p42 bra 	BB0_63;

	shr.u32 	%r88, %r3, 1;
	shr.u32 	%r252, %r167, 1;
	mul.lo.s32 	%r89, %r3, %r252;
	add.s32 	%r432, %r83, -1;
	mov.u32 	%r415, 1;
	mov.u32 	%r389, %r50;
	mov.u32 	%r465, %r466;
	mov.u32 	%r463, %r466;

BB0_44:
	mov.u32 	%r91, %r465;
	mov.u32 	%r451, %r463;
	mov.u32 	%r95, %r451;
	mov.u32 	%r422, %r434;
	mov.u32 	%r424, %r432;
	mov.u32 	%r97, %r424;
	mov.u32 	%r93, %r422;
	mov.u32 	%r411, %r415;
	mov.u32 	%r416, %r411;
	mov.u32 	%r365, %r389;
	mov.u32 	%r96, %r365;
	sub.s32 	%r98, %r91, %r165;
	mul.wide.u32 	%rd60, %r98, 4;
	add.s64 	%rd61, %rd2, %rd60;
	ld.global.u32 	%r99, [%rd61];
	setp.eq.s32	%p43, %r99, 0;
	mov.u32 	%r390, %r96;
	mov.u32 	%r433, %r97;
	mov.u32 	%r464, %r95;
	@%p43 bra 	BB0_62;

	setp.eq.s32	%p44, %r99, %r96;
	@%p44 bra 	BB0_61;
	bra.uni 	BB0_46;

BB0_61:
	add.s32 	%r416, %r416, 1;
	mov.u32 	%r390, %r96;
	mov.u32 	%r426, %r97;
	mov.u32 	%r433, %r426;
	mov.u32 	%r453, %r95;
	mov.u32 	%r464, %r453;
	bra.uni 	BB0_62;

BB0_46:
	mul.lo.s32 	%r259, %r99, %r421;
	mul.lo.s32 	%r262, %r259, %r4;
	mul.lo.s32 	%r256, %r262, %r3;
	mul.hi.u32 	%r257, %r262, %r3;
	mul.hi.u32 	%r260, %r99, %r421;
	mov.u32 	%r255, %r243;
	mov.u32 	%r254, %r260;
	mov.u32 	%r253, %r259;
	// inline asm
	add.cc.u32 %r253, %r253, %r256;   /* inline */   
	addc.cc.u32 %r254, %r254, %r257;   /* inline */   
	addc.u32 %r255, %r255, %r255;   /* inline */   
	
	// inline asm
	mul.wide.u32 	%rd62, %r97, 24;
	add.s64 	%rd63, %rd3, %rd62;
	ld.global.u64 	%rd25, [%rd63+8];
	and.b64  	%rd64, %rd25, -4294967296;
	setp.eq.s64	%p45, %rd64, 0;
	@%p45 bra 	BB0_48;
	bra.uni 	BB0_47;

BB0_48:
	cvt.u32.u64	%r263, %rd20;
	cvt.u32.u64	%r264, %rd25;
	rem.u32 	%r265, %r264, %r263;
	cvt.u64.u32	%rd92, %r265;
	bra.uni 	BB0_49;

BB0_47:
	rem.u64 	%rd92, %rd25, %rd20;

BB0_49:
	setp.ne.s32	%p46, %r255, 0;
	setp.ge.u32	%p47, %r254, %r3;
	or.pred  	%p48, %p46, %p47;
	selp.b32	%r275, %r3, 0, %p48;
	sub.s32 	%r103, %r254, %r275;
	cvt.u32.u64	%r276, %rd92;
	mul.lo.s32 	%r272, %r276, %r421;
	mul.hi.u32 	%r273, %r421, %r276;
	mul.lo.s32 	%r277, %r272, %r4;
	mul.lo.s32 	%r269, %r277, %r3;
	mul.hi.u32 	%r270, %r277, %r3;
	mov.u32 	%r268, %r243;
	mov.u32 	%r267, %r273;
	mov.u32 	%r266, %r272;
	// inline asm
	add.cc.u32 %r266, %r266, %r269;   /* inline */   
	addc.cc.u32 %r267, %r267, %r270;   /* inline */   
	addc.u32 %r268, %r268, %r268;   /* inline */   
	
	// inline asm
	setp.ne.s32	%p49, %r268, 0;
	setp.ge.u32	%p50, %r267, %r3;
	or.pred  	%p51, %p49, %p50;
	selp.b32	%r278, %r3, 0, %p51;
	sub.s32 	%r421, %r267, %r278;
	mov.u32 	%r414, %r416;
	mov.u32 	%r431, %r97;
	mov.u32 	%r462, %r95;

BB0_50:
	mov.u32 	%r450, %r462;
	mov.u32 	%r106, %r450;
	mul.wide.u32 	%rd65, %r431, 24;
	add.s64 	%rd66, %rd3, %rd65;
	ld.global.u64 	%rd29, [%rd66+16];
	and.b64  	%rd67, %rd29, -4294967296;
	setp.eq.s64	%p52, %rd67, 0;
	@%p52 bra 	BB0_52;
	bra.uni 	BB0_51;

BB0_52:
	cvt.u32.u64	%r279, %rd20;
	cvt.u32.u64	%r280, %rd29;
	rem.u32 	%r281, %r280, %r279;
	cvt.u64.u32	%rd93, %r281;
	bra.uni 	BB0_53;

BB0_51:
	rem.u64 	%rd93, %rd29, %rd20;

BB0_53:
	setp.eq.s32	%p53, %r162, 0;
	@%p53 bra 	BB0_60;

	cvt.u32.u64	%r108, %rd93;
	shl.b32 	%r283, %r431, %r166;
	or.b32  	%r109, %r283, %r2;
	mov.u32 	%r417, %r243;
	mov.u32 	%r418, %r1;
	mov.u32 	%r461, %r106;

BB0_55:
	mov.u32 	%r449, %r461;
	mov.u32 	%r113, %r449;
	mov.u32 	%r112, %r418;
	mov.u32 	%r111, %r417;
	cvta.to.global.u64 	%rd87, %rd41;
	mul.wide.u32 	%rd68, %r112, 4;
	add.s64 	%rd69, %rd87, %rd68;
	ld.global.u32 	%r288, [%rd69];
	// inline asm
	{  
	.reg .pred %pborrow;           
	.reg .u32 %borrow;           
	mov.b32 %borrow, 0;           
	sub.cc.u32 %r287, %r288, %r108;        
	subc.u32 %borrow, %borrow, 0; 
	setp.ne.u32 %pborrow, %borrow, 0;  
	@%pborrow add.u32 %r287, %r287, %r3; 
	} 
	
	// inline asm
	mul.lo.s32 	%r297, %r287, %r103;
	mul.hi.u32 	%r298, %r287, %r103;
	mul.lo.s32 	%r300, %r297, %r4;
	mul.lo.s32 	%r294, %r300, %r3;
	mul.hi.u32 	%r295, %r300, %r3;
	mov.u32 	%r292, %r298;
	mov.u32 	%r293, %r243;
	mov.u32 	%r291, %r297;
	// inline asm
	add.cc.u32 %r291, %r291, %r294;   /* inline */   
	addc.cc.u32 %r292, %r292, %r295;   /* inline */   
	addc.u32 %r293, %r293, %r293;   /* inline */   
	
	// inline asm
	setp.ne.s32	%p54, %r293, 0;
	setp.ge.u32	%p55, %r292, %r3;
	or.pred  	%p56, %p54, %p55;
	selp.b32	%r301, %r3, 0, %p56;
	sub.s32 	%r114, %r292, %r301;
	setp.eq.s32	%p57, %r167, 1;
	@%p57 bra 	BB0_58;
	bra.uni 	BB0_56;

BB0_58:
	setp.gt.u32	%p60, %r114, %r88;
	selp.b32	%r303, %r3, 0, %p60;
	sub.s32 	%r304, %r114, %r303;
	mul.wide.u32 	%rd73, %r113, 4;
	add.s64 	%rd74, %rd1, %rd73;
	st.global.u32 	[%rd74], %r109;
	add.s64 	%rd75, %rd2, %rd73;
	st.global.u32 	[%rd75], %r304;
	bra.uni 	BB0_59;

BB0_56:
	setp.eq.s32	%p58, %r167, 0;
	sub.s32 	%r420, %r114, %r89;
	mov.u32 	%r419, 0;
	mov.u32 	%r460, %r113;
	@%p58 bra 	BB0_59;

BB0_57:
	mov.u32 	%r116, %r460;
	mul.wide.u32 	%rd70, %r116, 4;
	add.s64 	%rd71, %rd1, %rd70;
	st.global.u32 	[%rd71], %r109;
	add.s64 	%rd72, %rd2, %rd70;
	st.global.u32 	[%rd72], %r420;
	add.s32 	%r119, %r116, %r7;
	add.s32 	%r420, %r420, %r3;
	add.s32 	%r419, %r419, 1;
	setp.lt.u32	%p59, %r419, %r167;
	mov.u32 	%r460, %r119;
	@%p59 bra 	BB0_57;

BB0_59:
	add.s32 	%r122, %r113, %r161;
	add.s32 	%r123, %r112, %r161;
	add.s32 	%r124, %r111, 1;
	setp.lt.u32	%p61, %r124, %r162;
	mov.u32 	%r417, %r124;
	mov.u32 	%r418, %r123;
	mov.u32 	%r461, %r122;
	@%p61 bra 	BB0_55;

BB0_60:
	add.s32 	%r431, %r431, -1;
	sub.s32 	%r462, %r106, %r165;
	add.s32 	%r414, %r414, -1;
	setp.eq.s32	%p62, %r414, 0;
	mov.u32 	%r416, 1;
	mov.u32 	%r390, %r99;
	mov.u32 	%r433, %r93;
	mov.u32 	%r464, %r98;
	@%p62 bra 	BB0_62;
	bra.uni 	BB0_50;

BB0_62:
	mov.u32 	%r454, %r464;
	mov.u32 	%r463, %r454;
	mov.u32 	%r427, %r433;
	mov.u32 	%r432, %r427;
	mov.u32 	%r415, %r416;
	mov.u32 	%r389, %r390;
	add.s32 	%r434, %r93, -1;
	setp.ge.s32	%p63, %r434, %r31;
	mov.u32 	%r430, %r432;
	mov.u32 	%r465, %r98;
	mov.u32 	%r459, %r463;
	@%p63 bra 	BB0_44;

BB0_63:
	mov.u32 	%r458, %r459;
	mov.u32 	%r429, %r430;
	setp.lt.s32	%p64, %r429, %r31;
	@%p64 bra 	BB0_76;

	shr.u32 	%r138, %r3, 1;
	shr.u32 	%r306, %r167, 1;
	mul.lo.s32 	%r139, %r3, %r306;

BB0_65:
	mov.u32 	%r447, %r458;
	mov.u32 	%r140, %r447;
	mul.wide.u32 	%rd76, %r429, 24;
	add.s64 	%rd77, %rd3, %rd76;
	ld.global.u64 	%rd35, [%rd77+16];
	and.b64  	%rd78, %rd35, -4294967296;
	setp.eq.s64	%p65, %rd78, 0;
	@%p65 bra 	BB0_67;
	bra.uni 	BB0_66;

BB0_67:
	cvt.u32.u64	%r307, %rd20;
	cvt.u32.u64	%r308, %rd35;
	rem.u32 	%r309, %r308, %r307;
	cvt.u64.u32	%rd94, %r309;
	bra.uni 	BB0_68;

BB0_66:
	rem.u64 	%rd94, %rd35, %rd20;

BB0_68:
	setp.eq.s32	%p66, %r162, 0;
	@%p66 bra 	BB0_75;

	cvt.u32.u64	%r142, %rd94;
	shl.b32 	%r311, %r429, %r166;
	or.b32  	%r143, %r311, %r2;
	mad.lo.s32 	%r436, %r168, %r169, %r170;
	cvta.to.global.u64 	%rd39, %rd41;
	mov.u32 	%r310, 0;
	mov.u32 	%r435, %r310;
	mov.u32 	%r457, %r140;

BB0_70:
	mov.u32 	%r446, %r457;
	mov.u32 	%r147, %r446;
	mov.u32 	%r145, %r435;
	mul.wide.u32 	%rd79, %r436, 4;
	add.s64 	%rd80, %rd39, %rd79;
	ld.global.u32 	%r316, [%rd80];
	// inline asm
	{  
	.reg .pred %pborrow;           
	.reg .u32 %borrow;           
	mov.b32 %borrow, 0;           
	sub.cc.u32 %r315, %r316, %r142;        
	subc.u32 %borrow, %borrow, 0; 
	setp.ne.u32 %pborrow, %borrow, 0;  
	@%pborrow add.u32 %r315, %r315, %r3; 
	} 
	
	// inline asm
	mul.lo.s32 	%r325, %r315, %r421;
	mul.hi.u32 	%r326, %r315, %r421;
	mul.lo.s32 	%r328, %r325, %r4;
	mul.lo.s32 	%r322, %r328, %r3;
	mul.hi.u32 	%r323, %r328, %r3;
	mov.u32 	%r320, %r326;
	mov.u32 	%r319, %r325;
	mov.u32 	%r321, %r310;
	// inline asm
	add.cc.u32 %r319, %r319, %r322;   /* inline */   
	addc.cc.u32 %r320, %r320, %r323;   /* inline */   
	addc.u32 %r321, %r321, %r321;   /* inline */   
	
	// inline asm
	setp.ne.s32	%p67, %r321, 0;
	setp.ge.u32	%p68, %r320, %r3;
	or.pred  	%p69, %p67, %p68;
	selp.b32	%r329, %r3, 0, %p69;
	sub.s32 	%r148, %r320, %r329;
	setp.eq.s32	%p70, %r167, 1;
	@%p70 bra 	BB0_73;
	bra.uni 	BB0_71;

BB0_73:
	setp.gt.u32	%p73, %r148, %r138;
	selp.b32	%r331, %r3, 0, %p73;
	sub.s32 	%r332, %r148, %r331;
	mul.wide.u32 	%rd84, %r147, 4;
	add.s64 	%rd85, %rd1, %rd84;
	st.global.u32 	[%rd85], %r143;
	add.s64 	%rd86, %rd2, %rd84;
	st.global.u32 	[%rd86], %r332;
	bra.uni 	BB0_74;

BB0_71:
	setp.eq.s32	%p71, %r167, 0;
	sub.s32 	%r472, %r148, %r139;
	mov.u32 	%r471, 0;
	mov.u32 	%r456, %r147;
	@%p71 bra 	BB0_74;

BB0_72:
	mov.u32 	%r150, %r456;
	mul.wide.u32 	%rd81, %r150, 4;
	add.s64 	%rd82, %rd1, %rd81;
	st.global.u32 	[%rd82], %r143;
	add.s64 	%rd83, %rd2, %rd81;
	st.global.u32 	[%rd83], %r472;
	add.s32 	%r153, %r150, %r7;
	add.s32 	%r472, %r472, %r3;
	add.s32 	%r471, %r471, 1;
	setp.lt.u32	%p72, %r471, %r167;
	mov.u32 	%r456, %r153;
	@%p72 bra 	BB0_72;

BB0_74:
	add.s32 	%r156, %r147, %r161;
	add.s32 	%r436, %r436, %r161;
	add.s32 	%r158, %r145, 1;
	setp.lt.u32	%p74, %r158, %r162;
	mov.u32 	%r435, %r158;
	mov.u32 	%r457, %r156;
	@%p74 bra 	BB0_70;

BB0_75:
	add.s32 	%r429, %r429, -1;
	sub.s32 	%r458, %r140, %r165;
	setp.ge.s32	%p75, %r429, %r31;
	@%p75 bra 	BB0_65;

BB0_76:
	ret;
}

	// .globl	sieve_kernel_trans_pp32_r64
.visible .entry sieve_kernel_trans_pp32_r64(
	.param .u64 sieve_kernel_trans_pp32_r64_param_0,
	.param .u32 sieve_kernel_trans_pp32_r64_param_1,
	.param .u64 sieve_kernel_trans_pp32_r64_param_2,
	.param .u32 sieve_kernel_trans_pp32_r64_param_3,
	.param .u64 sieve_kernel_trans_pp32_r64_param_4,
	.param .u64 sieve_kernel_trans_pp32_r64_param_5,
	.param .u64 sieve_kernel_trans_pp32_r64_param_6,
	.param .u32 sieve_kernel_trans_pp32_r64_param_7,
	.param .u32 sieve_kernel_trans_pp32_r64_param_8,
	.param .u32 sieve_kernel_trans_pp32_r64_param_9,
	.param .u32 sieve_kernel_trans_pp32_r64_param_10,
	.param .u32 sieve_kernel_trans_pp32_r64_param_11
)
{
	.reg .pred 	%p<78>;
	.reg .b32 	%r<463>;
	.reg .b64 	%rd<115>;


	ld.param.u64 	%rd48, [sieve_kernel_trans_pp32_r64_param_0];
	ld.param.u32 	%r153, [sieve_kernel_trans_pp32_r64_param_1];
	ld.param.u64 	%rd49, [sieve_kernel_trans_pp32_r64_param_2];
	ld.param.u32 	%r154, [sieve_kernel_trans_pp32_r64_param_3];
	ld.param.u64 	%rd51, [sieve_kernel_trans_pp32_r64_param_4];
	ld.param.u64 	%rd52, [sieve_kernel_trans_pp32_r64_param_5];
	ld.param.u64 	%rd50, [sieve_kernel_trans_pp32_r64_param_6];
	ld.param.u32 	%r155, [sieve_kernel_trans_pp32_r64_param_7];
	ld.param.u32 	%r156, [sieve_kernel_trans_pp32_r64_param_8];
	ld.param.u32 	%r157, [sieve_kernel_trans_pp32_r64_param_9];
	ld.param.u32 	%r158, [sieve_kernel_trans_pp32_r64_param_10];
	ld.param.u32 	%r159, [sieve_kernel_trans_pp32_r64_param_11];
	cvta.to.global.u64 	%rd1, %rd52;
	cvta.to.global.u64 	%rd2, %rd51;
	cvta.to.global.u64 	%rd3, %rd50;
	mov.u32 	%r160, %ntid.x;
	mov.u32 	%r161, %ctaid.x;
	mov.u32 	%r162, %tid.x;
	mad.lo.s32 	%r1, %r160, %r161, %r162;
	setp.ge.u32	%p5, %r1, %r153;
	@%p5 bra 	BB1_76;

	cvta.to.global.u64 	%rd53, %rd48;
	mul.wide.u32 	%rd54, %r1, 4;
	add.s64 	%rd55, %rd53, %rd54;
	ld.global.u32 	%r2, [%rd55];
	mul.lo.s32 	%r3, %r2, %r2;
	add.s32 	%r166, %r3, 2;
	mad.lo.s32 	%r167, %r166, %r3, 2;
	mul.lo.s32 	%r168, %r167, %r166;
	mad.lo.s32 	%r169, %r168, %r3, 2;
	mul.lo.s32 	%r170, %r169, %r168;
	mad.lo.s32 	%r171, %r170, %r3, 2;
	mul.lo.s32 	%r172, %r171, %r170;
	mad.lo.s32 	%r173, %r172, %r3, 2;
	mul.lo.s32 	%r4, %r173, %r172;
	mov.u32 	%r174, %ctaid.y;
	mul.lo.s32 	%r344, %r174, %r156;
	add.s32 	%r175, %r344, %r156;
	min.u32 	%r6, %r175, %r155;
	mul.lo.s32 	%r7, %r157, %r155;
	mad.lo.s32 	%r460, %r344, %r157, %r1;
	mul.wide.u32 	%rd56, %r344, 24;
	add.s64 	%rd107, %rd3, %rd56;
	mov.u32 	%r394, 0;
	mov.u32 	%r395, %r394;
	mov.pred 	%p76, -1;
	setp.ge.u32	%p7, %r344, %r6;
	@%p7 bra 	BB1_11;

	mul.lo.s32 	%r345, %r174, %r156;
	mul.wide.u32 	%rd57, %r345, 24;
	add.s64 	%rd107, %rd3, %rd57;
	mad.lo.s32 	%r461, %r345, %r157, %r1;
	mov.u32 	%r176, 0;
	mov.u32 	%r399, %r176;

BB1_3:
	mov.u32 	%r378, %r399;
	mov.u32 	%r374, %r397;
	mov.u32 	%r400, %r378;
	mov.u32 	%r398, %r374;
	ld.global.u32 	%r15, [%rd107];
	setp.eq.s32	%p8, %r400, %r15;
	mov.u32 	%r327, %r2;
	mov.u32 	%r396, %r176;
	mov.u32 	%r401, %r15;
	@%p8 bra 	BB1_10;

BB1_4:
	mov.u32 	%r17, %r401;
	mov.u32 	%r16, %r327;
	neg.s32 	%r180, %r17;
	and.b32  	%r181, %r17, %r180;
	clz.b32 	%r182, %r181;
	mov.u32 	%r183, 31;
	sub.s32 	%r184, %r183, %r182;
	shr.u32 	%r185, %r17, %r184;
	min.u32 	%r18, %r16, %r185;
	max.u32 	%r186, %r16, %r185;
	sub.s32 	%r19, %r186, %r18;
	setp.ne.s32	%p9, %r186, %r18;
	mov.u32 	%r327, %r18;
	mov.u32 	%r401, %r19;
	@%p9 bra 	BB1_4;

	setp.ne.s32	%p10, %r18, 1;
	mov.u32 	%r347, %r176;
	mov.u32 	%r400, %r15;
	mov.u32 	%r396, %r347;
	@%p10 bra 	BB1_10;

	ld.global.u64 	%rd7, [%rd107+8];
	and.b64  	%rd58, %rd7, -4294967296;
	setp.eq.s64	%p11, %rd58, 0;
	@%p11 bra 	BB1_8;
	bra.uni 	BB1_7;

BB1_8:
	cvt.u32.u64	%r188, %rd7;
	rem.u32 	%r189, %r188, %r3;
	cvt.u64.u32	%rd106, %r189;
	bra.uni 	BB1_9;

BB1_7:
	cvt.u64.u32	%rd59, %r3;
	rem.u64 	%rd106, %rd7, %rd59;

BB1_9:
	cvt.u32.u64	%r398, %rd106;
	mov.u32 	%r400, %r15;
	mov.u32 	%r350, %r398;
	mov.u32 	%r396, %r350;

BB1_10:
	mov.u32 	%r351, %r396;
	mov.u32 	%r399, %r400;
	mov.u32 	%r397, %r398;
	mov.u32 	%r395, %r351;
	mul.wide.u32 	%rd60, %r461, 4;
	add.s64 	%rd61, %rd2, %rd60;
	st.global.u32 	[%rd61], %r395;
	add.s32 	%r461, %r461, %r157;
	add.s64 	%rd107, %rd107, 24;
	add.s32 	%r345, %r345, 1;
	setp.lt.u32	%p12, %r345, %r6;
	setp.eq.s32	%p76, %r395, 0;
	and.pred  	%p13, %p76, %p12;
	mov.u32 	%r344, %r345;
	mov.u32 	%r393, %r397;
	mov.u32 	%r394, %r399;
	mov.u32 	%r460, %r461;
	@%p13 bra 	BB1_3;

BB1_11:
	mov.u32 	%r458, %r460;
	mov.u32 	%r389, %r394;
	mov.u32 	%r386, %r393;
	mov.u32 	%r391, %r395;
	mov.u32 	%r342, %r344;
	@%p76 bra 	BB1_76;

	add.s32 	%r31, %r342, -1;
	setp.ge.u32	%p14, %r342, %r6;
	@%p14 bra 	BB1_22;

	cvt.u64.u32	%rd13, %r3;
	mov.u32 	%r343, %r342;
	mov.u32 	%r387, %r386;
	mov.u32 	%r459, %r458;

BB1_14:
	mov.u32 	%r369, %r391;
	mov.u32 	%r367, %r389;
	mov.u32 	%r363, %r387;
	mov.u32 	%r392, %r369;
	mov.u32 	%r390, %r367;
	mov.u32 	%r36, %r363;
	ld.global.u32 	%r37, [%rd107];
	setp.eq.s32	%p15, %r390, %r37;
	mov.u32 	%r326, %r2;
	mov.u32 	%r388, %r36;
	mov.u32 	%r402, %r37;
	@%p15 bra 	BB1_21;

BB1_15:
	mov.u32 	%r39, %r402;
	mov.u32 	%r38, %r326;
	neg.s32 	%r190, %r39;
	and.b32  	%r191, %r39, %r190;
	clz.b32 	%r192, %r191;
	mov.u32 	%r193, 31;
	sub.s32 	%r194, %r193, %r192;
	shr.u32 	%r195, %r39, %r194;
	min.u32 	%r326, %r38, %r195;
	max.u32 	%r196, %r38, %r195;
	sub.s32 	%r41, %r196, %r326;
	setp.ne.s32	%p16, %r196, %r326;
	mov.u32 	%r402, %r41;
	@%p16 bra 	BB1_15;

	mov.u32 	%r392, 0;
	setp.ne.s32	%p17, %r326, 1;
	mov.u32 	%r390, %r37;
	mov.u32 	%r364, %r36;
	mov.u32 	%r388, %r364;
	@%p17 bra 	BB1_21;

	ld.global.u64 	%rd15, [%rd107+8];
	and.b64  	%rd62, %rd15, -4294967296;
	setp.eq.s64	%p18, %rd62, 0;
	@%p18 bra 	BB1_19;
	bra.uni 	BB1_18;

BB1_19:
	cvt.u32.u64	%r198, %rd13;
	cvt.u32.u64	%r199, %rd15;
	rem.u32 	%r200, %r199, %r198;
	cvt.u64.u32	%rd108, %r200;
	bra.uni 	BB1_20;

BB1_18:
	rem.u64 	%rd108, %rd15, %rd13;

BB1_20:
	cvt.u32.u64	%r210, %rd108;
	mul.lo.s32 	%r207, %r210, %r36;
	mul.hi.u32 	%r208, %r36, %r210;
	mul.lo.s32 	%r211, %r207, %r4;
	mul.lo.s32 	%r204, %r211, %r3;
	mul.hi.u32 	%r205, %r211, %r3;
	mov.u32 	%r209, 0;
	mov.u32 	%r201, %r207;
	mov.u32 	%r203, %r209;
	mov.u32 	%r202, %r208;
	// inline asm
	add.cc.u32 %r201, %r201, %r204;   /* inline */   
	addc.cc.u32 %r202, %r202, %r205;   /* inline */   
	addc.u32 %r203, %r203, %r203;   /* inline */   
	
	// inline asm
	setp.ne.s32	%p19, %r203, 0;
	setp.ge.u32	%p20, %r202, %r3;
	or.pred  	%p21, %p19, %p20;
	selp.b32	%r212, %r3, 0, %p21;
	sub.s32 	%r388, %r202, %r212;
	mov.u32 	%r390, %r37;
	mov.u32 	%r392, %r388;

BB1_21:
	mov.u32 	%r391, %r392;
	mov.u32 	%r389, %r390;
	mov.u32 	%r387, %r388;
	mul.wide.u32 	%rd63, %r459, 4;
	add.s64 	%rd64, %rd2, %rd63;
	st.global.u32 	[%rd64], %r391;
	add.s32 	%r459, %r459, %r157;
	add.s64 	%rd107, %rd107, 24;
	add.s32 	%r343, %r343, 1;
	setp.lt.u32	%p22, %r343, %r6;
	mov.u32 	%r342, %r343;
	mov.u32 	%r386, %r387;
	mov.u32 	%r458, %r459;
	@%p22 bra 	BB1_14;

BB1_22:
	mov.u32 	%r457, %r458;
	mov.u32 	%r50, %r386;
	mov.u32 	%r341, %r342;
	mov.u32 	%r332, 1;
	mov.pred 	%p77, -1;
	mov.u32 	%r335, %r332;
	mov.u32 	%r334, 0;
	mov.u32 	%r328, %r334;
	setp.lt.u32	%p24, %r50, 2;
	@%p24 bra 	BB1_36;

	mov.u32 	%r383, %r3;
	mov.u32 	%r384, %r50;

BB1_24:
	mov.u32 	%r360, %r384;
	mov.u32 	%r53, %r383;
	mov.u32 	%r54, %r360;
	mov.u32 	%r330, %r335;
	mov.u32 	%r55, %r330;
	mov.u32 	%r51, %r328;
	sub.s32 	%r56, %r53, %r54;
	sub.s32 	%r57, %r56, %r54;
	setp.lt.u32	%p25, %r56, %r54;
	mov.u32 	%r333, %r55;
	mov.u32 	%r385, %r56;
	@%p25 bra 	BB1_34;

	add.s32 	%r58, %r55, %r55;
	sub.s32 	%r59, %r57, %r54;
	setp.lt.u32	%p26, %r57, %r54;
	mov.u32 	%r333, %r58;
	mov.u32 	%r385, %r57;
	@%p26 bra 	BB1_34;

	add.s32 	%r60, %r58, %r55;
	sub.s32 	%r61, %r59, %r54;
	setp.lt.u32	%p27, %r59, %r54;
	mov.u32 	%r333, %r60;
	mov.u32 	%r385, %r59;
	@%p27 bra 	BB1_34;

	add.s32 	%r62, %r60, %r55;
	sub.s32 	%r63, %r61, %r54;
	setp.lt.u32	%p28, %r61, %r54;
	mov.u32 	%r333, %r62;
	mov.u32 	%r385, %r61;
	@%p28 bra 	BB1_34;

	add.s32 	%r64, %r62, %r55;
	sub.s32 	%r65, %r63, %r54;
	setp.lt.u32	%p29, %r63, %r54;
	mov.u32 	%r333, %r64;
	mov.u32 	%r385, %r63;
	@%p29 bra 	BB1_34;

	add.s32 	%r66, %r64, %r55;
	sub.s32 	%r67, %r65, %r54;
	setp.lt.u32	%p30, %r65, %r54;
	mov.u32 	%r333, %r66;
	mov.u32 	%r385, %r65;
	@%p30 bra 	BB1_34;

	add.s32 	%r68, %r66, %r55;
	sub.s32 	%r69, %r67, %r54;
	setp.lt.u32	%p31, %r67, %r54;
	mov.u32 	%r333, %r68;
	mov.u32 	%r385, %r67;
	@%p31 bra 	BB1_34;

	add.s32 	%r70, %r68, %r55;
	sub.s32 	%r71, %r69, %r54;
	setp.lt.u32	%p32, %r69, %r54;
	mov.u32 	%r333, %r70;
	mov.u32 	%r385, %r69;
	@%p32 bra 	BB1_34;

	add.s32 	%r72, %r70, %r55;
	setp.lt.u32	%p33, %r71, %r54;
	mov.u32 	%r333, %r72;
	mov.u32 	%r385, %r71;
	@%p33 bra 	BB1_34;

	div.u32 	%r217, %r53, %r54;
	mul.lo.s32 	%r218, %r217, %r54;
	sub.s32 	%r385, %r53, %r218;
	mul.lo.s32 	%r74, %r217, %r55;
	mov.u32 	%r333, %r74;

BB1_34:
	mov.u32 	%r76, %r385;
	mov.u32 	%r75, %r333;
	add.s32 	%r335, %r75, %r334;
	not.b32 	%r328, %r51;
	setp.gt.u32	%p34, %r76, 1;
	mov.u32 	%r334, %r55;
	mov.u32 	%r383, %r54;
	mov.u32 	%r384, %r76;
	@%p34 bra 	BB1_24;

	setp.eq.s32	%p77, %r51, -1;
	mov.u32 	%r332, %r335;

BB1_36:
	sub.s32 	%r219, %r3, %r332;
	selp.b32	%r80, %r332, %r219, %p77;
	cvt.u64.u32	%rd20, %r3;
	mov.pred 	%p35, 0;
	@%p35 bra 	BB1_38;

	mov.u64 	%rd65, -9223372036854775808;
	rem.u64 	%rd109, %rd65, %rd20;
	bra.uni 	BB1_39;

BB1_38:
	cvt.u32.u64	%r220, %rd20;
	mov.u32 	%r221, 0;
	rem.u32 	%r222, %r221, %r220;
	cvt.u64.u32	%rd109, %r222;

BB1_39:
	cvt.u32.u64	%r236, %rd109;
	add.s32 	%r237, %r236, %r236;
	setp.lt.u32	%p36, %r237, %r236;
	selp.b32	%r238, %r3, 0, %p36;
	sub.s32 	%r224, %r237, %r238;
	// inline asm
	{  
	.reg .pred %pborrow;           
	.reg .u32 %borrow;           
	mov.b32 %borrow, 0;           
	sub.cc.u32 %r223, %r224, %r3;        
	subc.u32 %borrow, %borrow, 0; 
	setp.ne.u32 %pborrow, %borrow, 0;  
	@%pborrow add.u32 %r223, %r223, %r3; 
	} 
	
	// inline asm
	mul.lo.s32 	%r233, %r223, %r80;
	mul.hi.u32 	%r234, %r80, %r223;
	mul.lo.s32 	%r239, %r233, %r4;
	mul.lo.s32 	%r230, %r239, %r3;
	mul.hi.u32 	%r231, %r239, %r3;
	mov.u32 	%r235, 0;
	mov.u32 	%r229, %r235;
	mov.u32 	%r228, %r234;
	mov.u32 	%r227, %r233;
	// inline asm
	add.cc.u32 %r227, %r227, %r230;   /* inline */   
	addc.cc.u32 %r228, %r228, %r231;   /* inline */   
	addc.u32 %r229, %r229, %r229;   /* inline */   
	
	// inline asm
	setp.ne.s32	%p37, %r229, 0;
	setp.ge.u32	%p38, %r228, %r3;
	or.pred  	%p39, %p37, %p38;
	selp.b32	%r240, %r3, 0, %p39;
	sub.s32 	%r412, %r228, %r240;

BB1_40:
	mov.u32 	%r83, %r341;
	sub.s32 	%r457, %r457, %r157;
	add.s32 	%r421, %r83, -1;
	setp.le.u32	%p40, %r421, %r31;
	@%p40 bra 	BB1_42;

	mul.wide.u32 	%rd66, %r457, 4;
	add.s64 	%rd67, %rd2, %rd66;
	ld.global.u32 	%r242, [%rd67];
	setp.eq.s32	%p41, %r242, 0;
	add.s32 	%r341, %r83, -1;
	@%p41 bra 	BB1_40;

BB1_42:
	add.s32 	%r425, %r83, -2;
	setp.lt.s32	%p42, %r425, %r31;
	mov.u32 	%r450, %r457;
	@%p42 bra 	BB1_63;

	shr.u32 	%r88, %r3, 1;
	shr.u32 	%r244, %r159, 1;
	cvt.u64.u32	%rd68, %r244;
	mul.lo.s64 	%rd24, %rd20, %rd68;
	add.s32 	%r423, %r83, -1;
	mov.u32 	%r407, 1;
	mov.u32 	%r381, %r50;
	mov.u32 	%r456, %r457;
	mov.u32 	%r454, %r457;

BB1_44:
	mov.u32 	%r90, %r456;
	mov.u32 	%r442, %r454;
	mov.u32 	%r94, %r442;
	mov.u32 	%r413, %r425;
	mov.u32 	%r415, %r423;
	mov.u32 	%r95, %r415;
	mov.u32 	%r92, %r413;
	mov.u32 	%r403, %r407;
	mov.u32 	%r408, %r403;
	mov.u32 	%r357, %r381;
	mov.u32 	%r96, %r357;
	sub.s32 	%r97, %r90, %r157;
	mul.wide.u32 	%rd69, %r97, 4;
	add.s64 	%rd70, %rd2, %rd69;
	ld.global.u32 	%r98, [%rd70];
	setp.eq.s32	%p43, %r98, 0;
	mov.u32 	%r382, %r96;
	mov.u32 	%r424, %r95;
	mov.u32 	%r455, %r94;
	@%p43 bra 	BB1_62;

	setp.eq.s32	%p44, %r98, %r96;
	@%p44 bra 	BB1_61;
	bra.uni 	BB1_46;

BB1_61:
	add.s32 	%r408, %r408, 1;
	mov.u32 	%r382, %r96;
	mov.u32 	%r417, %r95;
	mov.u32 	%r424, %r417;
	mov.u32 	%r444, %r94;
	mov.u32 	%r455, %r444;
	bra.uni 	BB1_62;

BB1_46:
	mul.lo.s32 	%r251, %r98, %r412;
	mul.lo.s32 	%r254, %r251, %r4;
	mul.lo.s32 	%r248, %r254, %r3;
	mul.hi.u32 	%r249, %r254, %r3;
	mul.hi.u32 	%r252, %r98, %r412;
	mov.u32 	%r246, %r252;
	mov.u32 	%r247, %r235;
	mov.u32 	%r245, %r251;
	// inline asm
	add.cc.u32 %r245, %r245, %r248;   /* inline */   
	addc.cc.u32 %r246, %r246, %r249;   /* inline */   
	addc.u32 %r247, %r247, %r247;   /* inline */   
	
	// inline asm
	mul.wide.u32 	%rd71, %r95, 24;
	add.s64 	%rd72, %rd3, %rd71;
	ld.global.u64 	%rd26, [%rd72+8];
	and.b64  	%rd73, %rd26, -4294967296;
	setp.eq.s64	%p45, %rd73, 0;
	@%p45 bra 	BB1_48;
	bra.uni 	BB1_47;

BB1_48:
	cvt.u32.u64	%r255, %rd20;
	cvt.u32.u64	%r256, %rd26;
	rem.u32 	%r257, %r256, %r255;
	cvt.u64.u32	%rd110, %r257;
	bra.uni 	BB1_49;

BB1_47:
	rem.u64 	%rd110, %rd26, %rd20;

BB1_49:
	setp.ne.s32	%p46, %r247, 0;
	setp.ge.u32	%p47, %r246, %r3;
	or.pred  	%p48, %p46, %p47;
	selp.b32	%r267, %r3, 0, %p48;
	sub.s32 	%r102, %r246, %r267;
	cvt.u32.u64	%r268, %rd110;
	mul.lo.s32 	%r264, %r268, %r412;
	mul.hi.u32 	%r265, %r412, %r268;
	mul.lo.s32 	%r269, %r264, %r4;
	mul.lo.s32 	%r261, %r269, %r3;
	mul.hi.u32 	%r262, %r269, %r3;
	mov.u32 	%r260, %r235;
	mov.u32 	%r258, %r264;
	mov.u32 	%r259, %r265;
	// inline asm
	add.cc.u32 %r258, %r258, %r261;   /* inline */   
	addc.cc.u32 %r259, %r259, %r262;   /* inline */   
	addc.u32 %r260, %r260, %r260;   /* inline */   
	
	// inline asm
	setp.ne.s32	%p49, %r260, 0;
	setp.ge.u32	%p50, %r259, %r3;
	or.pred  	%p51, %p49, %p50;
	selp.b32	%r270, %r3, 0, %p51;
	sub.s32 	%r412, %r259, %r270;
	mov.u32 	%r406, %r408;
	mov.u32 	%r422, %r95;
	mov.u32 	%r453, %r94;

BB1_50:
	mov.u32 	%r441, %r453;
	mov.u32 	%r105, %r441;
	mul.wide.u32 	%rd74, %r422, 24;
	add.s64 	%rd75, %rd3, %rd74;
	ld.global.u64 	%rd30, [%rd75+16];
	and.b64  	%rd76, %rd30, -4294967296;
	setp.eq.s64	%p52, %rd76, 0;
	@%p52 bra 	BB1_52;
	bra.uni 	BB1_51;

BB1_52:
	cvt.u32.u64	%r271, %rd20;
	cvt.u32.u64	%r272, %rd30;
	rem.u32 	%r273, %r272, %r271;
	cvt.u64.u32	%rd111, %r273;
	bra.uni 	BB1_53;

BB1_51:
	rem.u64 	%rd111, %rd30, %rd20;

BB1_53:
	setp.eq.s32	%p53, %r154, 0;
	@%p53 bra 	BB1_60;

	cvt.u32.u64	%r107, %rd111;
	shl.b32 	%r275, %r422, %r158;
	or.b32  	%r108, %r275, %r2;
	mov.u32 	%r409, %r235;
	mov.u32 	%r410, %r1;
	mov.u32 	%r452, %r105;

BB1_55:
	mov.u32 	%r440, %r452;
	mov.u32 	%r112, %r440;
	mov.u32 	%r111, %r410;
	mov.u32 	%r110, %r409;
	cvta.to.global.u64 	%rd105, %rd49;
	mul.wide.u32 	%rd77, %r111, 4;
	add.s64 	%rd78, %rd105, %rd77;
	ld.global.u32 	%r280, [%rd78];
	// inline asm
	{  
	.reg .pred %pborrow;           
	.reg .u32 %borrow;           
	mov.b32 %borrow, 0;           
	sub.cc.u32 %r279, %r280, %r107;        
	subc.u32 %borrow, %borrow, 0; 
	setp.ne.u32 %pborrow, %borrow, 0;  
	@%pborrow add.u32 %r279, %r279, %r3; 
	} 
	
	// inline asm
	mul.lo.s32 	%r289, %r279, %r102;
	mul.hi.u32 	%r290, %r279, %r102;
	mul.lo.s32 	%r292, %r289, %r4;
	mul.lo.s32 	%r286, %r292, %r3;
	mul.hi.u32 	%r287, %r292, %r3;
	mov.u32 	%r283, %r289;
	mov.u32 	%r285, %r235;
	mov.u32 	%r284, %r290;
	// inline asm
	add.cc.u32 %r283, %r283, %r286;   /* inline */   
	addc.cc.u32 %r284, %r284, %r287;   /* inline */   
	addc.u32 %r285, %r285, %r285;   /* inline */   
	
	// inline asm
	setp.ne.s32	%p54, %r285, 0;
	setp.ge.u32	%p55, %r284, %r3;
	or.pred  	%p56, %p54, %p55;
	selp.b32	%r293, %r3, 0, %p56;
	sub.s32 	%r113, %r284, %r293;
	setp.eq.s32	%p57, %r159, 1;
	@%p57 bra 	BB1_58;
	bra.uni 	BB1_56;

BB1_58:
	setp.gt.u32	%p60, %r113, %r88;
	selp.b32	%r295, %r3, 0, %p60;
	sub.s32 	%r296, %r113, %r295;
	mul.wide.u32 	%rd84, %r112, 4;
	add.s64 	%rd85, %rd2, %rd84;
	st.global.u32 	[%rd85], %r108;
	cvt.u64.u32	%rd86, %r296;
	mul.wide.u32 	%rd87, %r112, 8;
	add.s64 	%rd88, %rd1, %rd87;
	st.global.u64 	[%rd88], %rd86;
	bra.uni 	BB1_59;

BB1_56:
	setp.eq.s32	%p58, %r159, 0;
	cvt.u64.u32	%rd79, %r113;
	sub.s64 	%rd112, %rd79, %rd24;
	mov.u32 	%r411, 0;
	mov.u32 	%r451, %r112;
	@%p58 bra 	BB1_59;

BB1_57:
	mov.u32 	%r114, %r451;
	mul.wide.u32 	%rd80, %r114, 4;
	add.s64 	%rd81, %rd2, %rd80;
	st.global.u32 	[%rd81], %r108;
	mul.wide.u32 	%rd82, %r114, 8;
	add.s64 	%rd83, %rd1, %rd82;
	st.global.u64 	[%rd83], %rd112;
	add.s32 	%r116, %r114, %r7;
	add.s64 	%rd112, %rd112, %rd20;
	add.s32 	%r411, %r411, 1;
	setp.lt.u32	%p59, %r411, %r159;
	mov.u32 	%r451, %r116;
	@%p59 bra 	BB1_57;

BB1_59:
	add.s32 	%r118, %r112, %r153;
	add.s32 	%r119, %r111, %r153;
	add.s32 	%r120, %r110, 1;
	setp.lt.u32	%p61, %r120, %r154;
	mov.u32 	%r409, %r120;
	mov.u32 	%r410, %r119;
	mov.u32 	%r452, %r118;
	@%p61 bra 	BB1_55;

BB1_60:
	add.s32 	%r422, %r422, -1;
	sub.s32 	%r453, %r105, %r157;
	add.s32 	%r406, %r406, -1;
	setp.eq.s32	%p62, %r406, 0;
	mov.u32 	%r408, 1;
	mov.u32 	%r382, %r98;
	mov.u32 	%r424, %r92;
	mov.u32 	%r455, %r97;
	@%p62 bra 	BB1_62;
	bra.uni 	BB1_50;

BB1_62:
	mov.u32 	%r445, %r455;
	mov.u32 	%r454, %r445;
	mov.u32 	%r418, %r424;
	mov.u32 	%r423, %r418;
	mov.u32 	%r407, %r408;
	mov.u32 	%r381, %r382;
	add.s32 	%r425, %r92, -1;
	setp.ge.s32	%p63, %r425, %r31;
	mov.u32 	%r421, %r423;
	mov.u32 	%r456, %r97;
	mov.u32 	%r450, %r454;
	@%p63 bra 	BB1_44;

BB1_63:
	mov.u32 	%r449, %r450;
	mov.u32 	%r420, %r421;
	setp.lt.s32	%p64, %r420, %r31;
	@%p64 bra 	BB1_76;

	shr.u32 	%r134, %r3, 1;
	shr.u32 	%r298, %r159, 1;
	cvt.u64.u32	%rd89, %r298;
	mul.lo.s64 	%rd38, %rd20, %rd89;

BB1_65:
	mov.u32 	%r438, %r449;
	mov.u32 	%r135, %r438;
	mul.wide.u32 	%rd90, %r420, 24;
	add.s64 	%rd91, %rd3, %rd90;
	ld.global.u64 	%rd40, [%rd91+16];
	and.b64  	%rd92, %rd40, -4294967296;
	setp.eq.s64	%p65, %rd92, 0;
	@%p65 bra 	BB1_67;
	bra.uni 	BB1_66;

BB1_67:
	cvt.u32.u64	%r299, %rd20;
	cvt.u32.u64	%r300, %rd40;
	rem.u32 	%r301, %r300, %r299;
	cvt.u64.u32	%rd113, %r301;
	bra.uni 	BB1_68;

BB1_66:
	rem.u64 	%rd113, %rd40, %rd20;

BB1_68:
	setp.eq.s32	%p66, %r154, 0;
	@%p66 bra 	BB1_75;

	cvt.u32.u64	%r137, %rd113;
	shl.b32 	%r303, %r420, %r158;
	or.b32  	%r138, %r303, %r2;
	mad.lo.s32 	%r427, %r160, %r161, %r162;
	cvta.to.global.u64 	%rd44, %rd49;
	mov.u32 	%r302, 0;
	mov.u32 	%r426, %r302;
	mov.u32 	%r448, %r135;

BB1_70:
	mov.u32 	%r437, %r448;
	mov.u32 	%r142, %r437;
	mov.u32 	%r140, %r426;
	mul.wide.u32 	%rd93, %r427, 4;
	add.s64 	%rd94, %rd44, %rd93;
	ld.global.u32 	%r308, [%rd94];
	// inline asm
	{  
	.reg .pred %pborrow;           
	.reg .u32 %borrow;           
	mov.b32 %borrow, 0;           
	sub.cc.u32 %r307, %r308, %r137;        
	subc.u32 %borrow, %borrow, 0; 
	setp.ne.u32 %pborrow, %borrow, 0;  
	@%pborrow add.u32 %r307, %r307, %r3; 
	} 
	
	// inline asm
	mul.lo.s32 	%r317, %r307, %r412;
	mul.hi.u32 	%r318, %r307, %r412;
	mul.lo.s32 	%r320, %r317, %r4;
	mul.lo.s32 	%r314, %r320, %r3;
	mul.hi.u32 	%r315, %r320, %r3;
	mov.u32 	%r311, %r317;
	mov.u32 	%r313, %r302;
	mov.u32 	%r312, %r318;
	// inline asm
	add.cc.u32 %r311, %r311, %r314;   /* inline */   
	addc.cc.u32 %r312, %r312, %r315;   /* inline */   
	addc.u32 %r313, %r313, %r313;   /* inline */   
	
	// inline asm
	setp.ne.s32	%p67, %r313, 0;
	setp.ge.u32	%p68, %r312, %r3;
	or.pred  	%p69, %p67, %p68;
	selp.b32	%r321, %r3, 0, %p69;
	sub.s32 	%r143, %r312, %r321;
	setp.eq.s32	%p70, %r159, 1;
	@%p70 bra 	BB1_73;
	bra.uni 	BB1_71;

BB1_73:
	setp.gt.u32	%p73, %r143, %r134;
	selp.b32	%r323, %r3, 0, %p73;
	sub.s32 	%r324, %r143, %r323;
	mul.wide.u32 	%rd100, %r142, 4;
	add.s64 	%rd101, %rd2, %rd100;
	st.global.u32 	[%rd101], %r138;
	cvt.u64.u32	%rd102, %r324;
	mul.wide.u32 	%rd103, %r142, 8;
	add.s64 	%rd104, %rd1, %rd103;
	st.global.u64 	[%rd104], %rd102;
	bra.uni 	BB1_74;

BB1_71:
	setp.eq.s32	%p71, %r159, 0;
	cvt.u64.u32	%rd95, %r143;
	sub.s64 	%rd114, %rd95, %rd38;
	mov.u32 	%r462, 0;
	mov.u32 	%r447, %r142;
	@%p71 bra 	BB1_74;

BB1_72:
	mov.u32 	%r144, %r447;
	mul.wide.u32 	%rd96, %r144, 4;
	add.s64 	%rd97, %rd2, %rd96;
	st.global.u32 	[%rd97], %r138;
	mul.wide.u32 	%rd98, %r144, 8;
	add.s64 	%rd99, %rd1, %rd98;
	st.global.u64 	[%rd99], %rd114;
	add.s32 	%r146, %r144, %r7;
	add.s64 	%rd114, %rd114, %rd20;
	add.s32 	%r462, %r462, 1;
	setp.lt.u32	%p72, %r462, %r159;
	mov.u32 	%r447, %r146;
	@%p72 bra 	BB1_72;

BB1_74:
	add.s32 	%r148, %r142, %r153;
	add.s32 	%r427, %r427, %r153;
	add.s32 	%r150, %r140, 1;
	setp.lt.u32	%p74, %r150, %r154;
	mov.u32 	%r426, %r150;
	mov.u32 	%r448, %r148;
	@%p74 bra 	BB1_70;

BB1_75:
	add.s32 	%r420, %r420, -1;
	sub.s32 	%r449, %r135, %r157;
	setp.ge.s32	%p75, %r420, %r31;
	@%p75 bra 	BB1_65;

BB1_76:
	ret;
}

	// .globl	sieve_kernel_trans_pp64_r64
.visible .entry sieve_kernel_trans_pp64_r64(
	.param .u64 sieve_kernel_trans_pp64_r64_param_0,
	.param .u32 sieve_kernel_trans_pp64_r64_param_1,
	.param .u64 sieve_kernel_trans_pp64_r64_param_2,
	.param .u32 sieve_kernel_trans_pp64_r64_param_3,
	.param .u64 sieve_kernel_trans_pp64_r64_param_4,
	.param .u64 sieve_kernel_trans_pp64_r64_param_5,
	.param .u64 sieve_kernel_trans_pp64_r64_param_6,
	.param .u32 sieve_kernel_trans_pp64_r64_param_7,
	.param .u32 sieve_kernel_trans_pp64_r64_param_8,
	.param .u32 sieve_kernel_trans_pp64_r64_param_9,
	.param .u32 sieve_kernel_trans_pp64_r64_param_10,
	.param .u32 sieve_kernel_trans_pp64_r64_param_11
)
{
	.reg .pred 	%p<89>;
	.reg .b32 	%r<890>;
	.reg .b64 	%rd<309>;


	ld.param.u64 	%rd99, [sieve_kernel_trans_pp64_r64_param_0];
	ld.param.u32 	%r111, [sieve_kernel_trans_pp64_r64_param_1];
	ld.param.u64 	%rd100, [sieve_kernel_trans_pp64_r64_param_2];
	ld.param.u32 	%r112, [sieve_kernel_trans_pp64_r64_param_3];
	ld.param.u64 	%rd102, [sieve_kernel_trans_pp64_r64_param_4];
	ld.param.u64 	%rd103, [sieve_kernel_trans_pp64_r64_param_5];
	ld.param.u64 	%rd101, [sieve_kernel_trans_pp64_r64_param_6];
	ld.param.u32 	%r113, [sieve_kernel_trans_pp64_r64_param_7];
	ld.param.u32 	%r114, [sieve_kernel_trans_pp64_r64_param_8];
	ld.param.u32 	%r115, [sieve_kernel_trans_pp64_r64_param_9];
	ld.param.u32 	%r116, [sieve_kernel_trans_pp64_r64_param_10];
	ld.param.u32 	%r117, [sieve_kernel_trans_pp64_r64_param_11];
	cvta.to.global.u64 	%rd1, %rd102;
	cvta.to.global.u64 	%rd2, %rd103;
	mov.u32 	%r118, %ntid.x;
	mov.u32 	%r119, %ctaid.x;
	mov.u32 	%r120, %tid.x;
	mad.lo.s32 	%r1, %r118, %r119, %r120;
	setp.ge.u32	%p5, %r1, %r111;
	@%p5 bra 	BB2_79;

	cvta.to.global.u64 	%rd106, %rd101;
	cvta.to.global.u64 	%rd107, %rd99;
	mul.wide.u32 	%rd108, %r1, 4;
	add.s64 	%rd109, %rd107, %rd108;
	ld.global.u32 	%r2, [%rd109];
	mul.wide.u32 	%rd3, %r2, %r2;
	cvt.u32.u64	%r123, %rd3;
	add.s32 	%r124, %r123, 2;
	mad.lo.s32 	%r125, %r124, %r123, 2;
	mul.lo.s32 	%r126, %r125, %r124;
	mad.lo.s32 	%r127, %r126, %r123, 2;
	mul.lo.s32 	%r128, %r127, %r126;
	mad.lo.s32 	%r129, %r128, %r123, 2;
	mul.lo.s32 	%r130, %r129, %r128;
	mad.lo.s32 	%r131, %r130, %r123, 2;
	mul.lo.s32 	%r3, %r131, %r130;
	mov.u32 	%r132, %ctaid.y;
	mul.lo.s32 	%r828, %r132, %r114;
	add.s32 	%r133, %r828, %r114;
	min.u32 	%r5, %r133, %r113;
	mul.lo.s32 	%r6, %r115, %r113;
	mad.lo.s32 	%r887, %r828, %r115, %r1;
	mul.wide.u32 	%rd110, %r828, 24;
	add.s64 	%rd249, %rd106, %rd110;
	mov.u64 	%rd299, 0;
	mov.u32 	%r809, 0;
	mov.pred 	%p87, -1;
	mov.u32 	%r810, %r809;
	setp.ge.u32	%p7, %r828, %r5;
	@%p7 bra 	BB2_11;

	mov.u32 	%r829, %r828;
	mov.u32 	%r888, %r887;

BB2_3:
	mov.u64 	%rd284, %rd301;
	mov.u64 	%rd302, %rd284;
	mov.u32 	%r804, %r810;
	mov.u32 	%r811, %r804;
	ld.global.u32 	%r11, [%rd249];
	setp.eq.s32	%p8, %r811, %r11;
	mov.u64 	%rd300, 0;
	mov.u32 	%r812, %r11;
	mov.u32 	%r816, %r2;
	@%p8 bra 	BB2_10;

BB2_4:
	mov.u32 	%r12, %r816;
	mov.u32 	%r13, %r812;
	neg.s32 	%r134, %r13;
	and.b32  	%r135, %r13, %r134;
	clz.b32 	%r136, %r135;
	mov.u32 	%r137, 31;
	sub.s32 	%r138, %r137, %r136;
	shr.u32 	%r139, %r13, %r138;
	min.u32 	%r14, %r12, %r139;
	max.u32 	%r140, %r12, %r139;
	sub.s32 	%r15, %r140, %r14;
	setp.ne.s32	%p9, %r140, %r14;
	mov.u32 	%r812, %r15;
	mov.u32 	%r816, %r14;
	@%p9 bra 	BB2_4;

	setp.ne.s32	%p10, %r14, 1;
	mov.u32 	%r811, %r11;
	@%p10 bra 	BB2_10;

	ld.global.u64 	%rd7, [%rd249+8];
	or.b64  	%rd113, %rd7, %rd3;
	and.b64  	%rd114, %rd113, -4294967296;
	setp.eq.s64	%p11, %rd114, 0;
	@%p11 bra 	BB2_8;
	bra.uni 	BB2_7;

BB2_8:
	cvt.u32.u64	%r142, %rd7;
	rem.u32 	%r143, %r142, %r123;
	cvt.u64.u32	%rd302, %r143;
	bra.uni 	BB2_9;

BB2_7:
	rem.u64 	%rd302, %rd7, %rd3;

BB2_9:
	mov.u32 	%r811, %r11;
	mov.u64 	%rd300, %rd302;

BB2_10:
	mov.u64 	%rd301, %rd302;
	mov.u64 	%rd299, %rd300;
	mov.u32 	%r810, %r811;
	mul.wide.u32 	%rd115, %r888, 8;
	add.s64 	%rd116, %rd2, %rd115;
	st.global.u64 	[%rd116], %rd299;
	add.s32 	%r888, %r888, %r115;
	add.s64 	%rd249, %rd249, 24;
	add.s32 	%r829, %r829, 1;
	setp.lt.u32	%p12, %r829, %r5;
	setp.eq.s64	%p87, %rd299, 0;
	and.pred  	%p13, %p87, %p12;
	mov.u32 	%r809, %r810;
	mov.u32 	%r828, %r829;
	mov.u64 	%rd298, %rd301;
	mov.u32 	%r887, %r888;
	@%p13 bra 	BB2_3;

BB2_11:
	mov.u32 	%r885, %r887;
	mov.u64 	%rd293, %rd298;
	mov.u64 	%rd296, %rd299;
	mov.u32 	%r826, %r828;
	mov.u32 	%r807, %r809;
	@%p87 bra 	BB2_79;

	add.s32 	%r22, %r826, -1;
	setp.ge.u32	%p14, %r826, %r5;
	@%p14 bra 	BB2_22;

	shr.u64 	%rd117, %rd3, 32;
	cvt.u32.u64	%r23, %rd117;
	mov.u32 	%r827, %r826;
	mov.u64 	%rd294, %rd293;
	mov.u32 	%r886, %r885;

BB2_14:
	mov.u64 	%rd280, %rd296;
	mov.u64 	%rd276, %rd294;
	mov.u64 	%rd297, %rd280;
	mov.u64 	%rd18, %rd276;
	mov.u32 	%r801, %r807;
	mov.u32 	%r808, %r801;
	ld.global.u32 	%r27, [%rd249];
	setp.eq.s32	%p15, %r808, %r27;
	mov.u32 	%r813, %r27;
	mov.u32 	%r815, %r2;
	mov.u64 	%rd295, %rd18;
	@%p15 bra 	BB2_21;

BB2_15:
	mov.u32 	%r28, %r815;
	mov.u32 	%r29, %r813;
	neg.s32 	%r144, %r29;
	and.b32  	%r145, %r29, %r144;
	clz.b32 	%r146, %r145;
	mov.u32 	%r147, 31;
	sub.s32 	%r148, %r147, %r146;
	shr.u32 	%r149, %r29, %r148;
	min.u32 	%r815, %r28, %r149;
	max.u32 	%r150, %r28, %r149;
	sub.s32 	%r31, %r150, %r815;
	setp.ne.s32	%p16, %r150, %r815;
	mov.u32 	%r813, %r31;
	@%p16 bra 	BB2_15;

	mov.u64 	%rd297, 0;
	setp.ne.s32	%p17, %r815, 1;
	mov.u32 	%r808, %r27;
	mov.u64 	%rd277, %rd18;
	mov.u64 	%rd295, %rd277;
	@%p17 bra 	BB2_21;

	ld.global.u64 	%rd19, [%rd249+8];
	or.b64  	%rd119, %rd19, %rd3;
	and.b64  	%rd120, %rd119, -4294967296;
	setp.eq.s64	%p18, %rd120, 0;
	@%p18 bra 	BB2_19;
	bra.uni 	BB2_18;

BB2_19:
	cvt.u32.u64	%r152, %rd19;
	rem.u32 	%r153, %r152, %r123;
	cvt.u64.u32	%rd250, %r153;
	bra.uni 	BB2_20;

BB2_18:
	rem.u64 	%rd250, %rd19, %rd3;

BB2_20:
	shr.u64 	%rd121, %rd18, 32;
	cvt.u32.u64	%r215, %rd121;
	shr.u64 	%rd122, %rd250, 32;
	cvt.u32.u64	%r216, %rd122;
	cvt.u32.u64	%r217, %rd250;
	cvt.u32.u64	%r218, %rd18;
	mul.lo.s32 	%r160, %r217, %r218;
	mul.hi.u32 	%r161, %r218, %r217;
	mul.lo.s32 	%r219, %r160, %r3;
	mul.lo.s32 	%r157, %r219, %r123;
	mul.hi.u32 	%r158, %r219, %r123;
	mov.u32 	%r211, 0;
	mov.u32 	%r156, %r211;
	mov.u32 	%r155, %r161;
	mov.u32 	%r154, %r160;
	// inline asm
	add.cc.u32 %r154, %r154, %r157;   /* inline */   
	addc.cc.u32 %r155, %r155, %r158;   /* inline */   
	addc.u32 %r156, %r156, %r156;   /* inline */   
	
	// inline asm
	mul.lo.s32 	%r166, %r216, %r218;
	mul.hi.u32 	%r167, %r218, %r216;
	mov.u32 	%r165, %r156;
	mov.u32 	%r164, %r155;
	// inline asm
	add.cc.u32 %r163, %r164, %r166;   /* inline */   
	addc.cc.u32 %r164, %r165, %r167;   /* inline */   
	addc.u32 %r165, %r211, %r211;   /* inline */   
	
	// inline asm
	mul.lo.s32 	%r174, %r217, %r215;
	mul.hi.u32 	%r175, %r215, %r217;
	mov.u32 	%r172, %r164;
	mov.u32 	%r171, %r163;
	mov.u32 	%r173, %r165;
	// inline asm
	add.cc.u32 %r171, %r171, %r174;   /* inline */   
	addc.cc.u32 %r172, %r172, %r175;   /* inline */   
	addc.u32 %r173, %r173, %r211;   /* inline */   
	
	// inline asm
	mul.lo.s32 	%r183, %r219, %r23;
	mul.hi.u32 	%r184, %r219, %r23;
	mov.u32 	%r180, %r171;
	mov.u32 	%r182, %r173;
	mov.u32 	%r181, %r172;
	// inline asm
	add.cc.u32 %r180, %r180, %r183;   /* inline */   
	addc.cc.u32 %r181, %r181, %r184;   /* inline */   
	addc.u32 %r182, %r182, %r211;   /* inline */   
	
	// inline asm
	mul.lo.s32 	%r221, %r180, %r3;
	mul.lo.s32 	%r192, %r221, %r123;
	mul.hi.u32 	%r193, %r221, %r123;
	mov.u32 	%r189, %r180;
	mov.u32 	%r191, %r182;
	mov.u32 	%r190, %r181;
	// inline asm
	add.cc.u32 %r189, %r189, %r192;   /* inline */   
	addc.cc.u32 %r190, %r190, %r193;   /* inline */   
	addc.u32 %r191, %r191, %r211;   /* inline */   
	
	// inline asm
	mul.lo.s32 	%r201, %r216, %r215;
	mul.hi.u32 	%r202, %r215, %r216;
	mov.u32 	%r199, %r190;
	mov.u32 	%r200, %r191;
	// inline asm
	add.cc.u32 %r198, %r199, %r201;   /* inline */   
	addc.cc.u32 %r199, %r200, %r202;   /* inline */   
	addc.u32 %r200, %r211, %r211;   /* inline */   
	
	// inline asm
	mul.lo.s32 	%r209, %r221, %r23;
	mul.hi.u32 	%r210, %r221, %r23;
	mov.u32 	%r207, %r199;
	mov.u32 	%r206, %r198;
	mov.u32 	%r208, %r200;
	// inline asm
	add.cc.u32 %r206, %r206, %r209;   /* inline */   
	addc.cc.u32 %r207, %r207, %r210;   /* inline */   
	addc.u32 %r208, %r208, %r211;   /* inline */   
	
	// inline asm
	cvt.u64.u32	%rd123, %r207;
	shl.b64 	%rd124, %rd123, 32;
	cvt.u64.u32	%rd125, %r206;
	or.b64  	%rd126, %rd124, %rd125;
	setp.ne.s32	%p19, %r208, 0;
	setp.ge.u64	%p20, %rd126, %rd3;
	or.pred  	%p21, %p19, %p20;
	selp.b64	%rd127, %rd3, 0, %p21;
	sub.s64 	%rd295, %rd126, %rd127;
	mov.u32 	%r808, %r27;
	mov.u64 	%rd297, %rd295;

BB2_21:
	mov.u64 	%rd296, %rd297;
	mov.u64 	%rd294, %rd295;
	mov.u32 	%r807, %r808;
	mul.wide.u32 	%rd128, %r886, 8;
	add.s64 	%rd129, %rd2, %rd128;
	st.global.u64 	[%rd129], %rd296;
	add.s32 	%r886, %r886, %r115;
	add.s64 	%rd249, %rd249, 24;
	add.s32 	%r827, %r827, 1;
	setp.lt.u32	%p22, %r827, %r5;
	mov.u32 	%r826, %r827;
	mov.u64 	%rd293, %rd294;
	mov.u32 	%r885, %r886;
	@%p22 bra 	BB2_14;

BB2_22:
	mov.u32 	%r884, %r885;
	mov.u64 	%rd27, %rd293;
	mov.u32 	%r825, %r826;
	mov.u64 	%rd255, 1;
	mov.pred 	%p88, -1;
	mov.u64 	%rd258, %rd255;
	mov.u64 	%rd257, 0;
	mov.u32 	%r817, 0;
	setp.lt.u64	%p24, %rd27, 2;
	@%p24 bra 	BB2_39;

	mov.u64 	%rd290, %rd3;
	mov.u64 	%rd291, %rd27;

BB2_24:
	mov.u64 	%rd273, %rd291;
	mov.u64 	%rd29, %rd290;
	mov.u64 	%rd30, %rd273;
	mov.u64 	%rd253, %rd258;
	mov.u64 	%rd31, %rd253;
	mov.u32 	%r37, %r817;
	sub.s64 	%rd32, %rd29, %rd30;
	sub.s64 	%rd33, %rd32, %rd30;
	setp.lt.u64	%p25, %rd32, %rd30;
	mov.u64 	%rd256, %rd31;
	mov.u64 	%rd292, %rd32;
	@%p25 bra 	BB2_37;

	add.s64 	%rd34, %rd31, %rd31;
	sub.s64 	%rd35, %rd33, %rd30;
	setp.lt.u64	%p26, %rd33, %rd30;
	mov.u64 	%rd256, %rd34;
	mov.u64 	%rd292, %rd33;
	@%p26 bra 	BB2_37;

	add.s64 	%rd36, %rd34, %rd31;
	sub.s64 	%rd37, %rd35, %rd30;
	setp.lt.u64	%p27, %rd35, %rd30;
	mov.u64 	%rd256, %rd36;
	mov.u64 	%rd292, %rd35;
	@%p27 bra 	BB2_37;

	add.s64 	%rd38, %rd36, %rd31;
	sub.s64 	%rd39, %rd37, %rd30;
	setp.lt.u64	%p28, %rd37, %rd30;
	mov.u64 	%rd256, %rd38;
	mov.u64 	%rd292, %rd37;
	@%p28 bra 	BB2_37;

	add.s64 	%rd40, %rd38, %rd31;
	sub.s64 	%rd41, %rd39, %rd30;
	setp.lt.u64	%p29, %rd39, %rd30;
	mov.u64 	%rd256, %rd40;
	mov.u64 	%rd292, %rd39;
	@%p29 bra 	BB2_37;

	add.s64 	%rd42, %rd40, %rd31;
	sub.s64 	%rd43, %rd41, %rd30;
	setp.lt.u64	%p30, %rd41, %rd30;
	mov.u64 	%rd256, %rd42;
	mov.u64 	%rd292, %rd41;
	@%p30 bra 	BB2_37;

	add.s64 	%rd44, %rd42, %rd31;
	sub.s64 	%rd45, %rd43, %rd30;
	setp.lt.u64	%p31, %rd43, %rd30;
	mov.u64 	%rd256, %rd44;
	mov.u64 	%rd292, %rd43;
	@%p31 bra 	BB2_37;

	add.s64 	%rd46, %rd44, %rd31;
	sub.s64 	%rd47, %rd45, %rd30;
	setp.lt.u64	%p32, %rd45, %rd30;
	mov.u64 	%rd256, %rd46;
	mov.u64 	%rd292, %rd45;
	@%p32 bra 	BB2_37;

	add.s64 	%rd48, %rd46, %rd31;
	setp.lt.u64	%p33, %rd47, %rd30;
	mov.u64 	%rd256, %rd48;
	mov.u64 	%rd292, %rd47;
	@%p33 bra 	BB2_37;

	or.b64  	%rd133, %rd29, %rd30;
	and.b64  	%rd134, %rd133, -4294967296;
	setp.eq.s64	%p34, %rd134, 0;
	@%p34 bra 	BB2_35;
	bra.uni 	BB2_34;

BB2_35:
	cvt.u32.u64	%r223, %rd30;
	cvt.u32.u64	%r224, %rd29;
	div.u32 	%r225, %r224, %r223;
	cvt.u64.u32	%rd251, %r225;
	bra.uni 	BB2_36;

BB2_34:
	div.u64 	%rd251, %rd29, %rd30;

BB2_36:
	mul.lo.s64 	%rd135, %rd251, %rd30;
	sub.s64 	%rd292, %rd29, %rd135;
	mul.lo.s64 	%rd53, %rd251, %rd31;
	mov.u64 	%rd256, %rd53;

BB2_37:
	mov.u64 	%rd55, %rd292;
	mov.u64 	%rd54, %rd256;
	add.s64 	%rd258, %rd54, %rd257;
	not.b32 	%r817, %r37;
	setp.gt.u64	%p35, %rd55, 1;
	mov.u64 	%rd257, %rd31;
	mov.u64 	%rd290, %rd30;
	mov.u64 	%rd291, %rd55;
	@%p35 bra 	BB2_24;

	setp.eq.s32	%p88, %r37, -1;
	mov.u64 	%rd255, %rd258;

BB2_39:
	sub.s64 	%rd136, %rd3, %rd255;
	selp.b64	%rd58, %rd255, %rd136, %p88;
	clz.b64 	%r226, %rd3;
	cvt.u64.u32	%rd59, %r226;
	shl.b64 	%rd60, %rd3, %r226;
	neg.s64 	%rd61, %rd60;
	mov.u32 	%r227, 64;
	sub.s32 	%r818, %r227, %r226;
	setp.gt.u32	%p36, %r818, 71;
	mov.u64 	%rd261, %rd61;
	@%p36 bra 	BB2_42;

	mov.u64 	%rd262, %rd61;

BB2_41:
	shr.s64 	%rd137, %rd262, 63;
	and.b64  	%rd138, %rd137, %rd61;
	add.s64 	%rd139, %rd262, %rd262;
	add.s64 	%rd140, %rd139, %rd138;
	setp.ge.u64	%p37, %rd140, %rd60;
	selp.b64	%rd141, %rd60, 0, %p37;
	sub.s64 	%rd262, %rd140, %rd141;
	add.s32 	%r818, %r818, 1;
	setp.lt.u32	%p38, %r818, 72;
	mov.u64 	%rd260, %rd262;
	mov.u64 	%rd261, %rd260;
	@%p38 bra 	BB2_41;

BB2_42:
	cvt.u32.u64	%r472, %rd59;
	shr.u64 	%rd142, %rd261, %r472;
	cvt.u32.u64	%r473, %rd142;
	shr.u64 	%rd143, %rd142, 32;
	cvt.u32.u64	%r474, %rd143;
	shr.u64 	%rd144, %rd3, 32;
	cvt.u32.u64	%r42, %rd144;
	mul.lo.s32 	%r234, %r473, %r473;
	mul.hi.u32 	%r235, %r473, %r473;
	mul.lo.s32 	%r475, %r234, %r3;
	mul.lo.s32 	%r231, %r475, %r123;
	mul.hi.u32 	%r232, %r475, %r123;
	mov.u32 	%r468, 0;
	mov.u32 	%r228, %r234;
	mov.u32 	%r230, %r468;
	mov.u32 	%r229, %r235;
	// inline asm
	add.cc.u32 %r228, %r228, %r231;   /* inline */   
	addc.cc.u32 %r229, %r229, %r232;   /* inline */   
	addc.u32 %r230, %r230, %r230;   /* inline */   
	
	// inline asm
	mul.lo.s32 	%r248, %r474, %r473;
	mul.hi.u32 	%r241, %r473, %r474;
	mov.u32 	%r238, %r229;
	mov.u32 	%r239, %r230;
	// inline asm
	add.cc.u32 %r237, %r238, %r248;   /* inline */   
	addc.cc.u32 %r238, %r239, %r241;   /* inline */   
	addc.u32 %r239, %r468, %r468;   /* inline */   
	
	// inline asm
	mul.hi.u32 	%r249, %r474, %r473;
	mov.u32 	%r247, %r239;
	mov.u32 	%r246, %r238;
	mov.u32 	%r245, %r237;
	// inline asm
	add.cc.u32 %r245, %r245, %r248;   /* inline */   
	addc.cc.u32 %r246, %r246, %r249;   /* inline */   
	addc.u32 %r247, %r247, %r468;   /* inline */   
	
	// inline asm
	mul.lo.s32 	%r257, %r475, %r42;
	mul.hi.u32 	%r258, %r475, %r42;
	mov.u32 	%r255, %r246;
	mov.u32 	%r254, %r245;
	mov.u32 	%r256, %r247;
	// inline asm
	add.cc.u32 %r254, %r254, %r257;   /* inline */   
	addc.cc.u32 %r255, %r255, %r258;   /* inline */   
	addc.u32 %r256, %r256, %r468;   /* inline */   
	
	// inline asm
	mul.lo.s32 	%r477, %r254, %r3;
	mul.lo.s32 	%r266, %r477, %r123;
	mul.hi.u32 	%r267, %r477, %r123;
	mov.u32 	%r264, %r255;
	mov.u32 	%r263, %r254;
	mov.u32 	%r265, %r256;
	// inline asm
	add.cc.u32 %r263, %r263, %r266;   /* inline */   
	addc.cc.u32 %r264, %r264, %r267;   /* inline */   
	addc.u32 %r265, %r265, %r468;   /* inline */   
	
	// inline asm
	mul.lo.s32 	%r275, %r474, %r474;
	mul.hi.u32 	%r276, %r474, %r474;
	mov.u32 	%r274, %r265;
	mov.u32 	%r273, %r264;
	// inline asm
	add.cc.u32 %r272, %r273, %r275;   /* inline */   
	addc.cc.u32 %r273, %r274, %r276;   /* inline */   
	addc.u32 %r274, %r468, %r468;   /* inline */   
	
	// inline asm
	mul.lo.s32 	%r283, %r477, %r42;
	mul.hi.u32 	%r284, %r477, %r42;
	mov.u32 	%r280, %r272;
	mov.u32 	%r282, %r274;
	mov.u32 	%r281, %r273;
	// inline asm
	add.cc.u32 %r280, %r280, %r283;   /* inline */   
	addc.cc.u32 %r281, %r281, %r284;   /* inline */   
	addc.u32 %r282, %r282, %r468;   /* inline */   
	
	// inline asm
	cvt.u64.u32	%rd145, %r281;
	shl.b64 	%rd146, %rd145, 32;
	cvt.u64.u32	%rd147, %r280;
	or.b64  	%rd148, %rd146, %rd147;
	setp.ne.s32	%p39, %r282, 0;
	setp.ge.u64	%p40, %rd148, %rd3;
	or.pred  	%p41, %p39, %p40;
	selp.b64	%rd149, %rd3, 0, %p41;
	sub.s64 	%rd150, %rd148, %rd149;
	cvt.u32.u64	%r478, %rd150;
	shr.u64 	%rd151, %rd150, 32;
	cvt.u32.u64	%r479, %rd151;
	mul.lo.s32 	%r295, %r478, %r478;
	mul.hi.u32 	%r296, %r478, %r478;
	mul.lo.s32 	%r480, %r295, %r3;
	mul.lo.s32 	%r292, %r480, %r123;
	mul.hi.u32 	%r293, %r480, %r123;
	mov.u32 	%r290, %r296;
	mov.u32 	%r289, %r295;
	mov.u32 	%r291, %r468;
	// inline asm
	add.cc.u32 %r289, %r289, %r292;   /* inline */   
	addc.cc.u32 %r290, %r290, %r293;   /* inline */   
	addc.u32 %r291, %r291, %r291;   /* inline */   
	
	// inline asm
	mul.lo.s32 	%r309, %r479, %r478;
	mul.hi.u32 	%r302, %r478, %r479;
	mov.u32 	%r300, %r291;
	mov.u32 	%r299, %r290;
	// inline asm
	add.cc.u32 %r298, %r299, %r309;   /* inline */   
	addc.cc.u32 %r299, %r300, %r302;   /* inline */   
	addc.u32 %r300, %r468, %r468;   /* inline */   
	
	// inline asm
	mul.hi.u32 	%r310, %r479, %r478;
	mov.u32 	%r306, %r298;
	mov.u32 	%r308, %r300;
	mov.u32 	%r307, %r299;
	// inline asm
	add.cc.u32 %r306, %r306, %r309;   /* inline */   
	addc.cc.u32 %r307, %r307, %r310;   /* inline */   
	addc.u32 %r308, %r308, %r468;   /* inline */   
	
	// inline asm
	mul.lo.s32 	%r318, %r480, %r42;
	mul.hi.u32 	%r319, %r480, %r42;
	mov.u32 	%r316, %r307;
	mov.u32 	%r315, %r306;
	mov.u32 	%r317, %r308;
	// inline asm
	add.cc.u32 %r315, %r315, %r318;   /* inline */   
	addc.cc.u32 %r316, %r316, %r319;   /* inline */   
	addc.u32 %r317, %r317, %r468;   /* inline */   
	
	// inline asm
	mul.lo.s32 	%r481, %r315, %r3;
	mul.lo.s32 	%r327, %r481, %r123;
	mul.hi.u32 	%r328, %r481, %r123;
	mov.u32 	%r324, %r315;
	mov.u32 	%r326, %r317;
	mov.u32 	%r325, %r316;
	// inline asm
	add.cc.u32 %r324, %r324, %r327;   /* inline */   
	addc.cc.u32 %r325, %r325, %r328;   /* inline */   
	addc.u32 %r326, %r326, %r468;   /* inline */   
	
	// inline asm
	mul.lo.s32 	%r336, %r479, %r479;
	mul.hi.u32 	%r337, %r479, %r479;
	mov.u32 	%r335, %r326;
	mov.u32 	%r334, %r325;
	// inline asm
	add.cc.u32 %r333, %r334, %r336;   /* inline */   
	addc.cc.u32 %r334, %r335, %r337;   /* inline */   
	addc.u32 %r335, %r468, %r468;   /* inline */   
	
	// inline asm
	mul.lo.s32 	%r344, %r481, %r42;
	mul.hi.u32 	%r345, %r481, %r42;
	mov.u32 	%r342, %r334;
	mov.u32 	%r341, %r333;
	mov.u32 	%r343, %r335;
	// inline asm
	add.cc.u32 %r341, %r341, %r344;   /* inline */   
	addc.cc.u32 %r342, %r342, %r345;   /* inline */   
	addc.u32 %r343, %r343, %r468;   /* inline */   
	
	// inline asm
	cvt.u64.u32	%rd152, %r342;
	shl.b64 	%rd153, %rd152, 32;
	cvt.u64.u32	%rd154, %r341;
	or.b64  	%rd155, %rd153, %rd154;
	setp.ne.s32	%p42, %r343, 0;
	setp.ge.u64	%p43, %rd155, %rd3;
	or.pred  	%p44, %p42, %p43;
	selp.b64	%rd156, %rd3, 0, %p44;
	sub.s64 	%rd157, %rd155, %rd156;
	cvt.u32.u64	%r482, %rd157;
	shr.u64 	%rd158, %rd157, 32;
	cvt.u32.u64	%r483, %rd158;
	mul.lo.s32 	%r356, %r482, %r482;
	mul.hi.u32 	%r357, %r482, %r482;
	mul.lo.s32 	%r484, %r356, %r3;
	mul.lo.s32 	%r353, %r484, %r123;
	mul.hi.u32 	%r354, %r484, %r123;
	mov.u32 	%r351, %r357;
	mov.u32 	%r352, %r468;
	mov.u32 	%r350, %r356;
	// inline asm
	add.cc.u32 %r350, %r350, %r353;   /* inline */   
	addc.cc.u32 %r351, %r351, %r354;   /* inline */   
	addc.u32 %r352, %r352, %r352;   /* inline */   
	
	// inline asm
	mul.lo.s32 	%r370, %r483, %r482;
	mul.hi.u32 	%r363, %r482, %r483;
	mov.u32 	%r361, %r352;
	mov.u32 	%r360, %r351;
	// inline asm
	add.cc.u32 %r359, %r360, %r370;   /* inline */   
	addc.cc.u32 %r360, %r361, %r363;   /* inline */   
	addc.u32 %r361, %r468, %r468;   /* inline */   
	
	// inline asm
	mul.hi.u32 	%r371, %r483, %r482;
	mov.u32 	%r368, %r360;
	mov.u32 	%r367, %r359;
	mov.u32 	%r369, %r361;
	// inline asm
	add.cc.u32 %r367, %r367, %r370;   /* inline */   
	addc.cc.u32 %r368, %r368, %r371;   /* inline */   
	addc.u32 %r369, %r369, %r468;   /* inline */   
	
	// inline asm
	mul.lo.s32 	%r379, %r484, %r42;
	mul.hi.u32 	%r380, %r484, %r42;
	mov.u32 	%r376, %r367;
	mov.u32 	%r378, %r369;
	mov.u32 	%r377, %r368;
	// inline asm
	add.cc.u32 %r376, %r376, %r379;   /* inline */   
	addc.cc.u32 %r377, %r377, %r380;   /* inline */   
	addc.u32 %r378, %r378, %r468;   /* inline */   
	
	// inline asm
	mul.lo.s32 	%r485, %r376, %r3;
	mul.lo.s32 	%r388, %r485, %r123;
	mul.hi.u32 	%r389, %r485, %r123;
	mov.u32 	%r385, %r376;
	mov.u32 	%r387, %r378;
	mov.u32 	%r386, %r377;
	// inline asm
	add.cc.u32 %r385, %r385, %r388;   /* inline */   
	addc.cc.u32 %r386, %r386, %r389;   /* inline */   
	addc.u32 %r387, %r387, %r468;   /* inline */   
	
	// inline asm
	mul.lo.s32 	%r397, %r483, %r483;
	mul.hi.u32 	%r398, %r483, %r483;
	mov.u32 	%r395, %r386;
	mov.u32 	%r396, %r387;
	// inline asm
	add.cc.u32 %r394, %r395, %r397;   /* inline */   
	addc.cc.u32 %r395, %r396, %r398;   /* inline */   
	addc.u32 %r396, %r468, %r468;   /* inline */   
	
	// inline asm
	mul.lo.s32 	%r405, %r485, %r42;
	mul.hi.u32 	%r406, %r485, %r42;
	mov.u32 	%r403, %r395;
	mov.u32 	%r402, %r394;
	mov.u32 	%r404, %r396;
	// inline asm
	add.cc.u32 %r402, %r402, %r405;   /* inline */   
	addc.cc.u32 %r403, %r403, %r406;   /* inline */   
	addc.u32 %r404, %r404, %r468;   /* inline */   
	
	// inline asm
	cvt.u64.u32	%rd159, %r403;
	shl.b64 	%rd160, %rd159, 32;
	cvt.u64.u32	%rd161, %r402;
	or.b64  	%rd162, %rd160, %rd161;
	setp.ne.s32	%p45, %r404, 0;
	setp.ge.u64	%p46, %rd162, %rd3;
	or.pred  	%p47, %p45, %p46;
	selp.b64	%rd163, %rd3, 0, %p47;
	sub.s64 	%rd164, %rd162, %rd163;
	shr.u64 	%rd165, %rd58, 32;
	cvt.u32.u64	%r486, %rd165;
	cvt.u32.u64	%r487, %rd164;
	shr.u64 	%rd166, %rd164, 32;
	cvt.u32.u64	%r488, %rd166;
	cvt.u32.u64	%r489, %rd58;
	mul.lo.s32 	%r417, %r487, %r489;
	mul.hi.u32 	%r418, %r489, %r487;
	mul.lo.s32 	%r490, %r417, %r3;
	mul.lo.s32 	%r414, %r490, %r123;
	mul.hi.u32 	%r415, %r490, %r123;
	mov.u32 	%r413, %r468;
	mov.u32 	%r412, %r418;
	mov.u32 	%r411, %r417;
	// inline asm
	add.cc.u32 %r411, %r411, %r414;   /* inline */   
	addc.cc.u32 %r412, %r412, %r415;   /* inline */   
	addc.u32 %r413, %r413, %r413;   /* inline */   
	
	// inline asm
	mul.lo.s32 	%r423, %r488, %r489;
	mul.hi.u32 	%r424, %r489, %r488;
	mov.u32 	%r421, %r412;
	mov.u32 	%r422, %r413;
	// inline asm
	add.cc.u32 %r420, %r421, %r423;   /* inline */   
	addc.cc.u32 %r421, %r422, %r424;   /* inline */   
	addc.u32 %r422, %r468, %r468;   /* inline */   
	
	// inline asm
	mul.lo.s32 	%r431, %r487, %r486;
	mul.hi.u32 	%r432, %r486, %r487;
	mov.u32 	%r429, %r421;
	mov.u32 	%r428, %r420;
	mov.u32 	%r430, %r422;
	// inline asm
	add.cc.u32 %r428, %r428, %r431;   /* inline */   
	addc.cc.u32 %r429, %r429, %r432;   /* inline */   
	addc.u32 %r430, %r430, %r468;   /* inline */   
	
	// inline asm
	mul.lo.s32 	%r440, %r490, %r42;
	mul.hi.u32 	%r441, %r490, %r42;
	mov.u32 	%r437, %r428;
	mov.u32 	%r439, %r430;
	mov.u32 	%r438, %r429;
	// inline asm
	add.cc.u32 %r437, %r437, %r440;   /* inline */   
	addc.cc.u32 %r438, %r438, %r441;   /* inline */   
	addc.u32 %r439, %r439, %r468;   /* inline */   
	
	// inline asm
	mul.lo.s32 	%r491, %r437, %r3;
	mul.lo.s32 	%r449, %r491, %r123;
	mul.hi.u32 	%r450, %r491, %r123;
	mov.u32 	%r447, %r438;
	mov.u32 	%r446, %r437;
	mov.u32 	%r448, %r439;
	// inline asm
	add.cc.u32 %r446, %r446, %r449;   /* inline */   
	addc.cc.u32 %r447, %r447, %r450;   /* inline */   
	addc.u32 %r448, %r448, %r468;   /* inline */   
	
	// inline asm
	mul.lo.s32 	%r458, %r488, %r486;
	mul.hi.u32 	%r459, %r486, %r488;
	mov.u32 	%r456, %r447;
	mov.u32 	%r457, %r448;
	// inline asm
	add.cc.u32 %r455, %r456, %r458;   /* inline */   
	addc.cc.u32 %r456, %r457, %r459;   /* inline */   
	addc.u32 %r457, %r468, %r468;   /* inline */   
	
	// inline asm
	mul.lo.s32 	%r466, %r491, %r42;
	mul.hi.u32 	%r467, %r491, %r42;
	mov.u32 	%r465, %r457;
	mov.u32 	%r464, %r456;
	mov.u32 	%r463, %r455;
	// inline asm
	add.cc.u32 %r463, %r463, %r466;   /* inline */   
	addc.cc.u32 %r464, %r464, %r467;   /* inline */   
	addc.u32 %r465, %r465, %r468;   /* inline */   
	
	// inline asm
	cvt.u64.u32	%rd167, %r464;
	shl.b64 	%rd168, %rd167, 32;
	cvt.u64.u32	%rd169, %r463;
	or.b64  	%rd170, %rd168, %rd169;
	setp.ne.s32	%p48, %r465, 0;
	setp.ge.u64	%p49, %rd170, %rd3;
	or.pred  	%p50, %p48, %p49;
	selp.b64	%rd171, %rd3, 0, %p50;
	sub.s64 	%rd306, %rd170, %rd171;

BB2_43:
	mov.u32 	%r44, %r825;
	sub.s32 	%r884, %r884, %r115;
	add.s32 	%r847, %r44, -1;
	setp.le.u32	%p51, %r847, %r22;
	@%p51 bra 	BB2_45;

	mul.wide.u32 	%rd172, %r884, 8;
	add.s64 	%rd173, %rd2, %rd172;
	ld.global.u32 	%r493, [%rd173];
	setp.eq.s32	%p52, %r493, 0;
	add.s32 	%r825, %r44, -1;
	@%p52 bra 	BB2_43;

BB2_45:
	add.s32 	%r851, %r44, -2;
	setp.lt.s32	%p53, %r851, %r22;
	mov.u32 	%r877, %r884;
	@%p53 bra 	BB2_66;

	shr.u64 	%rd66, %rd3, 1;
	shr.u32 	%r495, %r117, 1;
	cvt.u64.u32	%rd174, %r495;
	mul.lo.s64 	%rd67, %rd3, %rd174;
	add.s32 	%r849, %r44, -1;
	mov.u32 	%r834, 1;
	mov.u64 	%rd288, %rd27;
	mov.u32 	%r883, %r884;
	mov.u32 	%r881, %r884;

BB2_47:
	mov.u32 	%r50, %r883;
	mov.u32 	%r869, %r881;
	mov.u32 	%r53, %r869;
	mov.u32 	%r839, %r851;
	mov.u32 	%r841, %r849;
	mov.u32 	%r54, %r841;
	mov.u32 	%r51, %r839;
	mov.u32 	%r830, %r834;
	mov.u32 	%r835, %r830;
	mov.u64 	%rd270, %rd288;
	mov.u64 	%rd69, %rd270;
	sub.s32 	%r55, %r50, %r115;
	mul.wide.u32 	%rd175, %r55, 8;
	add.s64 	%rd176, %rd2, %rd175;
	ld.global.u64 	%rd70, [%rd176];
	setp.eq.s64	%p54, %rd70, 0;
	mov.u64 	%rd289, %rd69;
	mov.u32 	%r850, %r54;
	mov.u32 	%r882, %r53;
	@%p54 bra 	BB2_65;

	setp.eq.s64	%p55, %rd70, %rd69;
	@%p55 bra 	BB2_64;
	bra.uni 	BB2_49;

BB2_64:
	add.s32 	%r835, %r835, 1;
	mov.u64 	%rd289, %rd69;
	mov.u32 	%r843, %r54;
	mov.u32 	%r850, %r843;
	mov.u32 	%r871, %r53;
	mov.u32 	%r882, %r871;
	bra.uni 	BB2_65;

BB2_49:
	cvt.u32.u64	%r557, %rd70;
	shr.u64 	%rd177, %rd70, 32;
	cvt.u32.u64	%r558, %rd177;
	shr.u64 	%rd178, %rd306, 32;
	cvt.u32.u64	%r56, %rd178;
	cvt.u32.u64	%r57, %rd306;
	mul.lo.s32 	%r502, %r557, %r57;
	mul.hi.u32 	%r503, %r557, %r57;
	mul.lo.s32 	%r559, %r502, %r3;
	mul.lo.s32 	%r499, %r559, %r123;
	mul.hi.u32 	%r500, %r559, %r123;
	mov.u32 	%r496, %r502;
	mov.u32 	%r498, %r468;
	mov.u32 	%r497, %r503;
	// inline asm
	add.cc.u32 %r496, %r496, %r499;   /* inline */   
	addc.cc.u32 %r497, %r497, %r500;   /* inline */   
	addc.u32 %r498, %r498, %r498;   /* inline */   
	
	// inline asm
	mul.lo.s32 	%r508, %r557, %r56;
	mul.hi.u32 	%r509, %r557, %r56;
	mov.u32 	%r506, %r497;
	mov.u32 	%r507, %r498;
	// inline asm
	add.cc.u32 %r505, %r506, %r508;   /* inline */   
	addc.cc.u32 %r506, %r507, %r509;   /* inline */   
	addc.u32 %r507, %r468, %r468;   /* inline */   
	
	// inline asm
	mul.lo.s32 	%r516, %r558, %r57;
	mul.hi.u32 	%r517, %r558, %r57;
	mov.u32 	%r515, %r507;
	mov.u32 	%r514, %r506;
	mov.u32 	%r513, %r505;
	// inline asm
	add.cc.u32 %r513, %r513, %r516;   /* inline */   
	addc.cc.u32 %r514, %r514, %r517;   /* inline */   
	addc.u32 %r515, %r515, %r468;   /* inline */   
	
	// inline asm
	mul.lo.s32 	%r525, %r559, %r42;
	mul.hi.u32 	%r526, %r559, %r42;
	mov.u32 	%r523, %r514;
	mov.u32 	%r522, %r513;
	mov.u32 	%r524, %r515;
	// inline asm
	add.cc.u32 %r522, %r522, %r525;   /* inline */   
	addc.cc.u32 %r523, %r523, %r526;   /* inline */   
	addc.u32 %r524, %r524, %r468;   /* inline */   
	
	// inline asm
	mul.lo.s32 	%r561, %r522, %r3;
	mul.lo.s32 	%r534, %r561, %r123;
	mul.hi.u32 	%r535, %r561, %r123;
	mov.u32 	%r532, %r523;
	mov.u32 	%r531, %r522;
	mov.u32 	%r533, %r524;
	// inline asm
	add.cc.u32 %r531, %r531, %r534;   /* inline */   
	addc.cc.u32 %r532, %r532, %r535;   /* inline */   
	addc.u32 %r533, %r533, %r468;   /* inline */   
	
	// inline asm
	mul.lo.s32 	%r543, %r558, %r56;
	mul.hi.u32 	%r544, %r558, %r56;
	mov.u32 	%r542, %r533;
	mov.u32 	%r541, %r532;
	// inline asm
	add.cc.u32 %r540, %r541, %r543;   /* inline */   
	addc.cc.u32 %r541, %r542, %r544;   /* inline */   
	addc.u32 %r542, %r468, %r468;   /* inline */   
	
	// inline asm
	mul.lo.s32 	%r551, %r561, %r42;
	mul.hi.u32 	%r552, %r561, %r42;
	mov.u32 	%r548, %r540;
	mov.u32 	%r550, %r542;
	mov.u32 	%r549, %r541;
	// inline asm
	add.cc.u32 %r548, %r548, %r551;   /* inline */   
	addc.cc.u32 %r549, %r549, %r552;   /* inline */   
	addc.u32 %r550, %r550, %r468;   /* inline */   
	
	// inline asm
	mul.wide.u32 	%rd180, %r54, 24;
	add.s64 	%rd181, %rd106, %rd180;
	ld.global.u64 	%rd71, [%rd181+8];
	or.b64  	%rd182, %rd71, %rd3;
	and.b64  	%rd183, %rd182, -4294967296;
	setp.eq.s64	%p56, %rd183, 0;
	@%p56 bra 	BB2_51;
	bra.uni 	BB2_50;

BB2_51:
	cvt.u32.u64	%r563, %rd71;
	rem.u32 	%r564, %r563, %r123;
	cvt.u64.u32	%rd303, %r564;
	bra.uni 	BB2_52;

BB2_50:
	rem.u64 	%rd303, %rd71, %rd3;

BB2_52:
	cvt.u64.u32	%rd184, %r549;
	shl.b64 	%rd185, %rd184, 32;
	cvt.u64.u32	%rd186, %r548;
	or.b64  	%rd187, %rd185, %rd186;
	setp.ne.s32	%p57, %r550, 0;
	setp.ge.u64	%p58, %rd187, %rd3;
	or.pred  	%p59, %p57, %p58;
	selp.b64	%rd188, %rd3, 0, %p59;
	sub.s64 	%rd189, %rd187, %rd188;
	shr.u64 	%rd190, %rd303, 32;
	cvt.u32.u64	%r626, %rd190;
	cvt.u32.u64	%r627, %rd303;
	mul.lo.s32 	%r571, %r627, %r57;
	mul.hi.u32 	%r572, %r57, %r627;
	mul.lo.s32 	%r628, %r571, %r3;
	mul.lo.s32 	%r568, %r628, %r123;
	mul.hi.u32 	%r569, %r628, %r123;
	mov.u32 	%r566, %r572;
	mov.u32 	%r567, %r468;
	mov.u32 	%r565, %r571;
	// inline asm
	add.cc.u32 %r565, %r565, %r568;   /* inline */   
	addc.cc.u32 %r566, %r566, %r569;   /* inline */   
	addc.u32 %r567, %r567, %r567;   /* inline */   
	
	// inline asm
	mul.lo.s32 	%r577, %r626, %r57;
	mul.hi.u32 	%r578, %r57, %r626;
	mov.u32 	%r576, %r567;
	mov.u32 	%r575, %r566;
	// inline asm
	add.cc.u32 %r574, %r575, %r577;   /* inline */   
	addc.cc.u32 %r575, %r576, %r578;   /* inline */   
	addc.u32 %r576, %r468, %r468;   /* inline */   
	
	// inline asm
	mul.lo.s32 	%r585, %r627, %r56;
	mul.hi.u32 	%r586, %r56, %r627;
	mov.u32 	%r583, %r575;
	mov.u32 	%r582, %r574;
	mov.u32 	%r584, %r576;
	// inline asm
	add.cc.u32 %r582, %r582, %r585;   /* inline */   
	addc.cc.u32 %r583, %r583, %r586;   /* inline */   
	addc.u32 %r584, %r584, %r468;   /* inline */   
	
	// inline asm
	mul.lo.s32 	%r594, %r628, %r42;
	mul.hi.u32 	%r595, %r628, %r42;
	mov.u32 	%r591, %r582;
	mov.u32 	%r593, %r584;
	mov.u32 	%r592, %r583;
	// inline asm
	add.cc.u32 %r591, %r591, %r594;   /* inline */   
	addc.cc.u32 %r592, %r592, %r595;   /* inline */   
	addc.u32 %r593, %r593, %r468;   /* inline */   
	
	// inline asm
	mul.lo.s32 	%r630, %r591, %r3;
	mul.lo.s32 	%r603, %r630, %r123;
	mul.hi.u32 	%r604, %r630, %r123;
	mov.u32 	%r600, %r591;
	mov.u32 	%r602, %r593;
	mov.u32 	%r601, %r592;
	// inline asm
	add.cc.u32 %r600, %r600, %r603;   /* inline */   
	addc.cc.u32 %r601, %r601, %r604;   /* inline */   
	addc.u32 %r602, %r602, %r468;   /* inline */   
	
	// inline asm
	mul.lo.s32 	%r612, %r626, %r56;
	mul.hi.u32 	%r613, %r56, %r626;
	mov.u32 	%r610, %r601;
	mov.u32 	%r611, %r602;
	// inline asm
	add.cc.u32 %r609, %r610, %r612;   /* inline */   
	addc.cc.u32 %r610, %r611, %r613;   /* inline */   
	addc.u32 %r611, %r468, %r468;   /* inline */   
	
	// inline asm
	mul.lo.s32 	%r620, %r630, %r42;
	mul.hi.u32 	%r621, %r630, %r42;
	mov.u32 	%r618, %r610;
	mov.u32 	%r617, %r609;
	mov.u32 	%r619, %r611;
	// inline asm
	add.cc.u32 %r617, %r617, %r620;   /* inline */   
	addc.cc.u32 %r618, %r618, %r621;   /* inline */   
	addc.u32 %r619, %r619, %r468;   /* inline */   
	
	// inline asm
	cvt.u64.u32	%rd191, %r618;
	shl.b64 	%rd192, %rd191, 32;
	cvt.u64.u32	%rd193, %r617;
	or.b64  	%rd194, %rd192, %rd193;
	setp.ne.s32	%p60, %r619, 0;
	setp.ge.u64	%p61, %rd194, %rd3;
	or.pred  	%p62, %p60, %p61;
	selp.b64	%rd195, %rd3, 0, %p62;
	sub.s64 	%rd306, %rd194, %rd195;
	cvt.u32.u64	%r61, %rd189;
	shr.u64 	%rd196, %rd189, 32;
	cvt.u32.u64	%r62, %rd196;
	mov.u32 	%r833, %r835;
	mov.u32 	%r848, %r54;
	mov.u32 	%r880, %r53;

BB2_53:
	mov.u32 	%r868, %r880;
	mov.u32 	%r64, %r868;
	mul.wide.u32 	%rd198, %r848, 24;
	add.s64 	%rd199, %rd106, %rd198;
	ld.global.u64 	%rd76, [%rd199+16];
	or.b64  	%rd200, %rd76, %rd3;
	and.b64  	%rd201, %rd200, -4294967296;
	setp.eq.s64	%p63, %rd201, 0;
	@%p63 bra 	BB2_55;
	bra.uni 	BB2_54;

BB2_55:
	cvt.u32.u64	%r632, %rd76;
	rem.u32 	%r633, %r632, %r123;
	cvt.u64.u32	%rd304, %r633;
	bra.uni 	BB2_56;

BB2_54:
	rem.u64 	%rd304, %rd76, %rd3;

BB2_56:
	setp.eq.s32	%p64, %r112, 0;
	@%p64 bra 	BB2_63;

	cvt.u32.u64	%r66, %rd304;
	shr.u64 	%rd202, %rd304, 32;
	cvt.u32.u64	%r67, %rd202;
	shl.b32 	%r635, %r848, %r116;
	or.b32  	%r68, %r635, %r2;
	mov.u32 	%r836, %r468;
	mov.u32 	%r837, %r1;
	mov.u32 	%r879, %r64;

BB2_58:
	mov.u32 	%r867, %r879;
	mov.u32 	%r72, %r867;
	mov.u32 	%r71, %r837;
	mov.u32 	%r70, %r836;
	cvta.to.global.u64 	%rd203, %rd100;
	mul.wide.u32 	%rd204, %r71, 8;
	add.s64 	%rd205, %rd203, %rd204;
	ld.global.u64 	%rd206, [%rd205];
	cvt.u32.u64	%r641, %rd206;
	shr.u64 	%rd207, %rd206, 32;
	cvt.u32.u64	%r642, %rd207;
	// inline asm
	{  
	.reg .pred %pborrow;           
	.reg .u32 %borrow;           
	mov.b32 %borrow, 0;           
	sub.cc.u32 %r639, %r641, %r66;        
	subc.cc.u32 %r640, %r642, %r67;        
	subc.u32 %borrow, %borrow, 0; 
	setp.ne.u32 %pborrow, %borrow, 0;  
	@%pborrow add.cc.u32 %r639, %r639, %r123; 
	@%pborrow addc.u32 %r640, %r640, %r42; 
	} 
	
	// inline asm
	mul.lo.s32 	%r653, %r639, %r61;
	mul.hi.u32 	%r654, %r639, %r61;
	mul.lo.s32 	%r708, %r653, %r3;
	mul.lo.s32 	%r650, %r708, %r123;
	mul.hi.u32 	%r651, %r708, %r123;
	mov.u32 	%r648, %r654;
	mov.u32 	%r649, %r468;
	mov.u32 	%r647, %r653;
	// inline asm
	add.cc.u32 %r647, %r647, %r650;   /* inline */   
	addc.cc.u32 %r648, %r648, %r651;   /* inline */   
	addc.u32 %r649, %r649, %r649;   /* inline */   
	
	// inline asm
	mul.lo.s32 	%r659, %r639, %r62;
	mul.hi.u32 	%r660, %r639, %r62;
	mov.u32 	%r658, %r649;
	mov.u32 	%r657, %r648;
	// inline asm
	add.cc.u32 %r656, %r657, %r659;   /* inline */   
	addc.cc.u32 %r657, %r658, %r660;   /* inline */   
	addc.u32 %r658, %r468, %r468;   /* inline */   
	
	// inline asm
	mul.lo.s32 	%r667, %r640, %r61;
	mul.hi.u32 	%r668, %r640, %r61;
	mov.u32 	%r665, %r657;
	mov.u32 	%r664, %r656;
	mov.u32 	%r666, %r658;
	// inline asm
	add.cc.u32 %r664, %r664, %r667;   /* inline */   
	addc.cc.u32 %r665, %r665, %r668;   /* inline */   
	addc.u32 %r666, %r666, %r468;   /* inline */   
	
	// inline asm
	mul.lo.s32 	%r676, %r708, %r42;
	mul.hi.u32 	%r677, %r708, %r42;
	mov.u32 	%r673, %r664;
	mov.u32 	%r675, %r666;
	mov.u32 	%r674, %r665;
	// inline asm
	add.cc.u32 %r673, %r673, %r676;   /* inline */   
	addc.cc.u32 %r674, %r674, %r677;   /* inline */   
	addc.u32 %r675, %r675, %r468;   /* inline */   
	
	// inline asm
	mul.lo.s32 	%r709, %r673, %r3;
	mul.lo.s32 	%r685, %r709, %r123;
	mul.hi.u32 	%r686, %r709, %r123;
	mov.u32 	%r682, %r673;
	mov.u32 	%r684, %r675;
	mov.u32 	%r683, %r674;
	// inline asm
	add.cc.u32 %r682, %r682, %r685;   /* inline */   
	addc.cc.u32 %r683, %r683, %r686;   /* inline */   
	addc.u32 %r684, %r684, %r468;   /* inline */   
	
	// inline asm
	mul.lo.s32 	%r694, %r640, %r62;
	mul.hi.u32 	%r695, %r640, %r62;
	mov.u32 	%r692, %r683;
	mov.u32 	%r693, %r684;
	// inline asm
	add.cc.u32 %r691, %r692, %r694;   /* inline */   
	addc.cc.u32 %r692, %r693, %r695;   /* inline */   
	addc.u32 %r693, %r468, %r468;   /* inline */   
	
	// inline asm
	mul.lo.s32 	%r702, %r709, %r42;
	mul.hi.u32 	%r703, %r709, %r42;
	mov.u32 	%r700, %r692;
	mov.u32 	%r699, %r691;
	mov.u32 	%r701, %r693;
	// inline asm
	add.cc.u32 %r699, %r699, %r702;   /* inline */   
	addc.cc.u32 %r700, %r700, %r703;   /* inline */   
	addc.u32 %r701, %r701, %r468;   /* inline */   
	
	// inline asm
	cvt.u64.u32	%rd208, %r700;
	shl.b64 	%rd209, %rd208, 32;
	cvt.u64.u32	%rd210, %r699;
	or.b64  	%rd211, %rd209, %rd210;
	setp.ne.s32	%p65, %r701, 0;
	setp.ge.u64	%p66, %rd211, %rd3;
	or.pred  	%p67, %p65, %p66;
	selp.b64	%rd212, %rd3, 0, %p67;
	sub.s64 	%rd80, %rd211, %rd212;
	setp.eq.s32	%p68, %r117, 1;
	@%p68 bra 	BB2_61;
	bra.uni 	BB2_59;

BB2_61:
	setp.gt.u64	%p71, %rd80, %rd66;
	selp.b64	%rd217, %rd3, 0, %p71;
	sub.s64 	%rd218, %rd80, %rd217;
	mul.wide.u32 	%rd219, %r72, 4;
	add.s64 	%rd220, %rd1, %rd219;
	st.global.u32 	[%rd220], %r68;
	mul.wide.u32 	%rd221, %r72, 8;
	add.s64 	%rd222, %rd2, %rd221;
	st.global.u64 	[%rd222], %rd218;
	bra.uni 	BB2_62;

BB2_59:
	setp.eq.s32	%p69, %r117, 0;
	sub.s64 	%rd305, %rd80, %rd67;
	mov.u32 	%r838, 0;
	mov.u32 	%r878, %r72;
	@%p69 bra 	BB2_62;

BB2_60:
	mov.u32 	%r73, %r878;
	mul.wide.u32 	%rd213, %r73, 4;
	add.s64 	%rd214, %rd1, %rd213;
	st.global.u32 	[%rd214], %r68;
	mul.wide.u32 	%rd215, %r73, 8;
	add.s64 	%rd216, %rd2, %rd215;
	st.global.u64 	[%rd216], %rd305;
	add.s32 	%r75, %r73, %r6;
	add.s64 	%rd305, %rd305, %rd3;
	add.s32 	%r838, %r838, 1;
	setp.lt.u32	%p70, %r838, %r117;
	mov.u32 	%r878, %r75;
	@%p70 bra 	BB2_60;

BB2_62:
	add.s32 	%r77, %r72, %r111;
	add.s32 	%r78, %r71, %r111;
	add.s32 	%r79, %r70, 1;
	setp.lt.u32	%p72, %r79, %r112;
	mov.u32 	%r836, %r79;
	mov.u32 	%r837, %r78;
	mov.u32 	%r879, %r77;
	@%p72 bra 	BB2_58;

BB2_63:
	add.s32 	%r848, %r848, -1;
	sub.s32 	%r880, %r64, %r115;
	add.s32 	%r833, %r833, -1;
	setp.eq.s32	%p73, %r833, 0;
	mov.u32 	%r835, 1;
	mov.u64 	%rd289, %rd70;
	mov.u32 	%r850, %r51;
	mov.u32 	%r882, %r55;
	@%p73 bra 	BB2_65;
	bra.uni 	BB2_53;

BB2_65:
	mov.u32 	%r872, %r882;
	mov.u32 	%r881, %r872;
	mov.u32 	%r844, %r850;
	mov.u32 	%r849, %r844;
	mov.u32 	%r834, %r835;
	mov.u64 	%rd288, %rd289;
	add.s32 	%r851, %r51, -1;
	setp.ge.s32	%p74, %r851, %r22;
	mov.u32 	%r847, %r849;
	mov.u32 	%r883, %r55;
	mov.u32 	%r877, %r881;
	@%p74 bra 	BB2_47;

BB2_66:
	mov.u32 	%r876, %r877;
	mov.u32 	%r846, %r847;
	setp.lt.s32	%p75, %r846, %r22;
	@%p75 bra 	BB2_79;

	cvt.u32.u64	%r90, %rd306;
	shr.u64 	%rd223, %rd306, 32;
	cvt.u32.u64	%r91, %rd223;
	shr.u64 	%rd87, %rd3, 1;
	shr.u32 	%r712, %r117, 1;
	cvt.u64.u32	%rd224, %r712;
	mul.lo.s64 	%rd88, %rd3, %rd224;

BB2_68:
	mov.u32 	%r865, %r876;
	mov.u32 	%r92, %r865;
	mul.wide.u32 	%rd225, %r846, 24;
	add.s64 	%rd226, %rd106, %rd225;
	ld.global.u64 	%rd90, [%rd226+16];
	or.b64  	%rd227, %rd90, %rd3;
	and.b64  	%rd228, %rd227, -4294967296;
	setp.eq.s64	%p76, %rd228, 0;
	@%p76 bra 	BB2_70;
	bra.uni 	BB2_69;

BB2_70:
	cvt.u32.u64	%r714, %rd90;
	rem.u32 	%r715, %r714, %r123;
	cvt.u64.u32	%rd307, %r715;
	bra.uni 	BB2_71;

BB2_69:
	rem.u64 	%rd307, %rd90, %rd3;

BB2_71:
	setp.eq.s32	%p77, %r112, 0;
	@%p77 bra 	BB2_78;

	mov.u32 	%r795, %tid.x;
	mov.u32 	%r794, %ctaid.x;
	mov.u32 	%r793, %ntid.x;
	cvt.u32.u64	%r94, %rd307;
	shr.u64 	%rd229, %rd307, 32;
	cvt.u32.u64	%r95, %rd229;
	shl.b32 	%r717, %r846, %r116;
	or.b32  	%r96, %r717, %r2;
	mad.lo.s32 	%r853, %r793, %r794, %r795;
	cvta.to.global.u64 	%rd94, %rd100;
	mov.u32 	%r716, 0;
	mov.u32 	%r852, %r716;
	mov.u32 	%r875, %r92;

BB2_73:
	mov.u32 	%r864, %r875;
	mov.u32 	%r101, %r864;
	mov.u32 	%r99, %r852;
	mul.wide.u32 	%rd230, %r853, 8;
	add.s64 	%rd231, %rd94, %rd230;
	ld.global.u64 	%rd232, [%rd231];
	cvt.u32.u64	%r723, %rd232;
	shr.u64 	%rd233, %rd232, 32;
	cvt.u32.u64	%r724, %rd233;
	// inline asm
	{  
	.reg .pred %pborrow;           
	.reg .u32 %borrow;           
	mov.b32 %borrow, 0;           
	sub.cc.u32 %r721, %r723, %r94;        
	subc.cc.u32 %r722, %r724, %r95;        
	subc.u32 %borrow, %borrow, 0; 
	setp.ne.u32 %pborrow, %borrow, 0;  
	@%pborrow add.cc.u32 %r721, %r721, %r123; 
	@%pborrow addc.u32 %r722, %r722, %r42; 
	} 
	
	// inline asm
	mul.lo.s32 	%r735, %r721, %r90;
	mul.hi.u32 	%r736, %r721, %r90;
	mul.lo.s32 	%r790, %r735, %r3;
	mul.lo.s32 	%r732, %r790, %r123;
	mul.hi.u32 	%r733, %r790, %r123;
	mov.u32 	%r729, %r735;
	mov.u32 	%r731, %r716;
	mov.u32 	%r730, %r736;
	// inline asm
	add.cc.u32 %r729, %r729, %r732;   /* inline */   
	addc.cc.u32 %r730, %r730, %r733;   /* inline */   
	addc.u32 %r731, %r731, %r731;   /* inline */   
	
	// inline asm
	mul.lo.s32 	%r741, %r721, %r91;
	mul.hi.u32 	%r742, %r721, %r91;
	mov.u32 	%r739, %r730;
	mov.u32 	%r740, %r731;
	// inline asm
	add.cc.u32 %r738, %r739, %r741;   /* inline */   
	addc.cc.u32 %r739, %r740, %r742;   /* inline */   
	addc.u32 %r740, %r716, %r716;   /* inline */   
	
	// inline asm
	mul.lo.s32 	%r749, %r722, %r90;
	mul.hi.u32 	%r750, %r722, %r90;
	mov.u32 	%r748, %r740;
	mov.u32 	%r747, %r739;
	mov.u32 	%r746, %r738;
	// inline asm
	add.cc.u32 %r746, %r746, %r749;   /* inline */   
	addc.cc.u32 %r747, %r747, %r750;   /* inline */   
	addc.u32 %r748, %r748, %r716;   /* inline */   
	
	// inline asm
	mul.lo.s32 	%r758, %r790, %r42;
	mul.hi.u32 	%r759, %r790, %r42;
	mov.u32 	%r756, %r747;
	mov.u32 	%r755, %r746;
	mov.u32 	%r757, %r748;
	// inline asm
	add.cc.u32 %r755, %r755, %r758;   /* inline */   
	addc.cc.u32 %r756, %r756, %r759;   /* inline */   
	addc.u32 %r757, %r757, %r716;   /* inline */   
	
	// inline asm
	mul.lo.s32 	%r791, %r755, %r3;
	mul.lo.s32 	%r767, %r791, %r123;
	mul.hi.u32 	%r768, %r791, %r123;
	mov.u32 	%r765, %r756;
	mov.u32 	%r764, %r755;
	mov.u32 	%r766, %r757;
	// inline asm
	add.cc.u32 %r764, %r764, %r767;   /* inline */   
	addc.cc.u32 %r765, %r765, %r768;   /* inline */   
	addc.u32 %r766, %r766, %r716;   /* inline */   
	
	// inline asm
	mul.lo.s32 	%r776, %r722, %r91;
	mul.hi.u32 	%r777, %r722, %r91;
	mov.u32 	%r775, %r766;
	mov.u32 	%r774, %r765;
	// inline asm
	add.cc.u32 %r773, %r774, %r776;   /* inline */   
	addc.cc.u32 %r774, %r775, %r777;   /* inline */   
	addc.u32 %r775, %r716, %r716;   /* inline */   
	
	// inline asm
	mul.lo.s32 	%r784, %r791, %r42;
	mul.hi.u32 	%r785, %r791, %r42;
	mov.u32 	%r781, %r773;
	mov.u32 	%r783, %r775;
	mov.u32 	%r782, %r774;
	// inline asm
	add.cc.u32 %r781, %r781, %r784;   /* inline */   
	addc.cc.u32 %r782, %r782, %r785;   /* inline */   
	addc.u32 %r783, %r783, %r716;   /* inline */   
	
	// inline asm
	cvt.u64.u32	%rd234, %r782;
	shl.b64 	%rd235, %rd234, 32;
	cvt.u64.u32	%rd236, %r781;
	or.b64  	%rd237, %rd235, %rd236;
	setp.ne.s32	%p78, %r783, 0;
	setp.ge.u64	%p79, %rd237, %rd3;
	or.pred  	%p80, %p78, %p79;
	selp.b64	%rd238, %rd3, 0, %p80;
	sub.s64 	%rd95, %rd237, %rd238;
	setp.eq.s32	%p81, %r117, 1;
	@%p81 bra 	BB2_76;
	bra.uni 	BB2_74;

BB2_76:
	setp.gt.u64	%p84, %rd95, %rd87;
	selp.b64	%rd243, %rd3, 0, %p84;
	sub.s64 	%rd244, %rd95, %rd243;
	mul.wide.u32 	%rd245, %r101, 4;
	add.s64 	%rd246, %rd1, %rd245;
	st.global.u32 	[%rd246], %r96;
	mul.wide.u32 	%rd247, %r101, 8;
	add.s64 	%rd248, %rd2, %rd247;
	st.global.u64 	[%rd248], %rd244;
	bra.uni 	BB2_77;

BB2_74:
	setp.eq.s32	%p82, %r117, 0;
	sub.s64 	%rd308, %rd95, %rd88;
	mov.u32 	%r889, 0;
	mov.u32 	%r874, %r101;
	@%p82 bra 	BB2_77;

BB2_75:
	mov.u32 	%r102, %r874;
	mul.wide.u32 	%rd239, %r102, 4;
	add.s64 	%rd240, %rd1, %rd239;
	st.global.u32 	[%rd240], %r96;
	mul.wide.u32 	%rd241, %r102, 8;
	add.s64 	%rd242, %rd2, %rd241;
	st.global.u64 	[%rd242], %rd308;
	add.s32 	%r104, %r102, %r6;
	add.s64 	%rd308, %rd308, %rd3;
	add.s32 	%r889, %r889, 1;
	setp.lt.u32	%p83, %r889, %r117;
	mov.u32 	%r874, %r104;
	@%p83 bra 	BB2_75;

BB2_77:
	add.s32 	%r106, %r101, %r111;
	add.s32 	%r853, %r853, %r111;
	add.s32 	%r108, %r99, 1;
	setp.lt.u32	%p85, %r108, %r112;
	mov.u32 	%r852, %r108;
	mov.u32 	%r875, %r106;
	@%p85 bra 	BB2_73;

BB2_78:
	add.s32 	%r846, %r846, -1;
	sub.s32 	%r876, %r92, %r115;
	setp.ge.s32	%p86, %r846, %r22;
	@%p86 bra 	BB2_68;

BB2_79:
	ret;
}

	// .globl	sieve_kernel_final_32
.visible .entry sieve_kernel_final_32(
	.param .u64 sieve_kernel_final_32_param_0,
	.param .u64 sieve_kernel_final_32_param_1,
	.param .u32 sieve_kernel_final_32_param_2,
	.param .u64 sieve_kernel_final_32_param_3,
	.param .u64 sieve_kernel_final_32_param_4,
	.param .u32 sieve_kernel_final_32_param_5
)
{
	.reg .pred 	%p<11>;
	.reg .b32 	%r<44>;
	.reg .b64 	%rd<25>;


	ld.param.u64 	%rd5, [sieve_kernel_final_32_param_0];
	ld.param.u64 	%rd8, [sieve_kernel_final_32_param_1];
	ld.param.u32 	%r17, [sieve_kernel_final_32_param_2];
	ld.param.u64 	%rd6, [sieve_kernel_final_32_param_3];
	ld.param.u64 	%rd7, [sieve_kernel_final_32_param_4];
	ld.param.u32 	%r18, [sieve_kernel_final_32_param_5];
	cvta.to.global.u64 	%rd1, %rd8;
	mov.u32 	%r19, %ctaid.x;
	mov.u32 	%r20, %ntid.x;
	mov.u32 	%r21, %tid.x;
	mad.lo.s32 	%r40, %r19, %r20, %r21;
	mov.u32 	%r22, 1;
	shl.b32 	%r23, %r22, %r18;
	add.s32 	%r2, %r23, -1;
	add.s32 	%r24, %r17, -1;
	setp.ge.u32	%p1, %r40, %r24;
	@%p1 bra 	BB3_14;

	cvta.to.global.u64 	%rd14, %rd6;

BB3_2:
	cvt.u64.u32	%rd2, %r40;
	mul.wide.u32 	%rd9, %r40, 4;
	add.s64 	%rd10, %rd1, %rd9;
	ld.global.s32 	%rd3, [%rd10];
	setp.eq.s64	%p2, %rd3, 0;
	@%p2 bra 	BB3_13;

	add.s32 	%r41, %r40, 1;
	setp.ge.u32	%p3, %r41, %r17;
	@%p3 bra 	BB3_13;

	cvta.to.global.u64 	%rd11, %rd5;
	shl.b64 	%rd12, %rd2, 2;
	add.s64 	%rd13, %rd11, %rd12;
	ld.global.u32 	%r25, [%rd13];
	shr.u32 	%r5, %r25, %r18;
	and.b32  	%r6, %r25, %r2;
	mul.wide.u32 	%rd15, %r5, 24;
	add.s64 	%rd4, %rd14, %rd15;

BB3_5:
	mul.wide.u32 	%rd16, %r41, 4;
	add.s64 	%rd17, %rd1, %rd16;
	add.s64 	%rd19, %rd11, %rd16;
	ld.global.u32 	%r8, [%rd19];
	ld.global.u32 	%r26, [%rd17];
	cvt.u32.u64	%r27, %rd3;
	setp.ne.s32	%p4, %r27, %r26;
	@%p4 bra 	BB3_13;

	shr.u32 	%r28, %r8, %r18;
	setp.ne.s32	%p5, %r5, %r28;
	@%p5 bra 	BB3_12;

	and.b32  	%r9, %r8, %r2;
	mov.u32 	%r42, %r6;
	mov.u32 	%r43, %r9;

BB3_8:
	mov.u32 	%r11, %r43;
	mov.u32 	%r10, %r42;
	neg.s32 	%r29, %r11;
	and.b32  	%r30, %r11, %r29;
	clz.b32 	%r31, %r30;
	mov.u32 	%r32, 31;
	sub.s32 	%r33, %r32, %r31;
	shr.u32 	%r34, %r11, %r33;
	min.u32 	%r12, %r10, %r34;
	max.u32 	%r35, %r10, %r34;
	sub.s32 	%r13, %r35, %r12;
	setp.ne.s32	%p6, %r35, %r12;
	mov.u32 	%r42, %r12;
	mov.u32 	%r43, %r13;
	@%p6 bra 	BB3_8;

	setp.ne.s32	%p7, %r12, 1;
	@%p7 bra 	BB3_12;

	cvta.to.global.u64 	%rd20, %rd7;
	atom.global.add.u32 	%r14, [%rd20], 1;
	setp.gt.u32	%p8, %r14, 998;
	@%p8 bra 	BB3_12;

	mul.wide.u32 	%rd22, %r14, 32;
	add.s64 	%rd23, %rd22, %rd20;
	st.global.v2.u32 	[%rd23+32], {%r6, %r9};
	ld.global.u32 	%r36, [%rd4];
	st.global.u32 	[%rd23+40], %r36;
	ld.global.u64 	%rd24, [%rd4+16];
	st.global.u64 	[%rd23+48], %rd24;
	st.global.u64 	[%rd23+56], %rd3;

BB3_12:
	add.s32 	%r41, %r41, 1;
	setp.lt.u32	%p9, %r41, %r17;
	@%p9 bra 	BB3_5;

BB3_13:
	mov.u32 	%r38, %nctaid.x;
	mad.lo.s32 	%r40, %r20, %r38, %r40;
	setp.lt.u32	%p10, %r40, %r24;
	@%p10 bra 	BB3_2;

BB3_14:
	ret;
}

	// .globl	sieve_kernel_final_64
.visible .entry sieve_kernel_final_64(
	.param .u64 sieve_kernel_final_64_param_0,
	.param .u64 sieve_kernel_final_64_param_1,
	.param .u32 sieve_kernel_final_64_param_2,
	.param .u64 sieve_kernel_final_64_param_3,
	.param .u64 sieve_kernel_final_64_param_4,
	.param .u32 sieve_kernel_final_64_param_5
)
{
	.reg .pred 	%p<11>;
	.reg .b32 	%r<42>;
	.reg .b64 	%rd<27>;


	ld.param.u64 	%rd5, [sieve_kernel_final_64_param_0];
	ld.param.u64 	%rd8, [sieve_kernel_final_64_param_1];
	ld.param.u32 	%r17, [sieve_kernel_final_64_param_2];
	ld.param.u64 	%rd6, [sieve_kernel_final_64_param_3];
	ld.param.u64 	%rd7, [sieve_kernel_final_64_param_4];
	ld.param.u32 	%r18, [sieve_kernel_final_64_param_5];
	cvta.to.global.u64 	%rd1, %rd8;
	mov.u32 	%r19, %ctaid.x;
	mov.u32 	%r20, %ntid.x;
	mov.u32 	%r21, %tid.x;
	mad.lo.s32 	%r38, %r19, %r20, %r21;
	mov.u32 	%r22, 1;
	shl.b32 	%r23, %r22, %r18;
	add.s32 	%r2, %r23, -1;
	add.s32 	%r24, %r17, -1;
	setp.ge.u32	%p1, %r38, %r24;
	@%p1 bra 	BB4_14;

	cvta.to.global.u64 	%rd14, %rd6;

BB4_2:
	cvt.u64.u32	%rd2, %r38;
	mul.wide.u32 	%rd9, %r38, 8;
	add.s64 	%rd10, %rd1, %rd9;
	ld.global.u64 	%rd3, [%rd10];
	setp.eq.s64	%p2, %rd3, 0;
	@%p2 bra 	BB4_13;

	add.s32 	%r39, %r38, 1;
	setp.ge.u32	%p3, %r39, %r17;
	@%p3 bra 	BB4_13;

	cvta.to.global.u64 	%rd11, %rd5;
	shl.b64 	%rd12, %rd2, 2;
	add.s64 	%rd13, %rd11, %rd12;
	ld.global.u32 	%r25, [%rd13];
	shr.u32 	%r5, %r25, %r18;
	and.b32  	%r6, %r25, %r2;
	mul.wide.u32 	%rd15, %r5, 24;
	add.s64 	%rd4, %rd14, %rd15;

BB4_5:
	mul.wide.u32 	%rd16, %r39, 8;
	add.s64 	%rd17, %rd1, %rd16;
	mul.wide.u32 	%rd19, %r39, 4;
	add.s64 	%rd20, %rd11, %rd19;
	ld.global.u32 	%r8, [%rd20];
	ld.global.u64 	%rd21, [%rd17];
	setp.ne.s64	%p4, %rd3, %rd21;
	@%p4 bra 	BB4_13;

	shr.u32 	%r26, %r8, %r18;
	setp.ne.s32	%p5, %r5, %r26;
	@%p5 bra 	BB4_12;

	and.b32  	%r9, %r8, %r2;
	mov.u32 	%r40, %r6;
	mov.u32 	%r41, %r9;

BB4_8:
	mov.u32 	%r11, %r41;
	mov.u32 	%r10, %r40;
	neg.s32 	%r27, %r11;
	and.b32  	%r28, %r11, %r27;
	clz.b32 	%r29, %r28;
	mov.u32 	%r30, 31;
	sub.s32 	%r31, %r30, %r29;
	shr.u32 	%r32, %r11, %r31;
	min.u32 	%r12, %r10, %r32;
	max.u32 	%r33, %r10, %r32;
	sub.s32 	%r13, %r33, %r12;
	setp.ne.s32	%p6, %r33, %r12;
	mov.u32 	%r40, %r12;
	mov.u32 	%r41, %r13;
	@%p6 bra 	BB4_8;

	setp.ne.s32	%p7, %r12, 1;
	@%p7 bra 	BB4_12;

	cvta.to.global.u64 	%rd22, %rd7;
	atom.global.add.u32 	%r14, [%rd22], 1;
	setp.gt.u32	%p8, %r14, 998;
	@%p8 bra 	BB4_12;

	mul.wide.u32 	%rd24, %r14, 32;
	add.s64 	%rd25, %rd24, %rd22;
	st.global.v2.u32 	[%rd25+32], {%r6, %r9};
	ld.global.u32 	%r34, [%rd4];
	st.global.u32 	[%rd25+40], %r34;
	ld.global.u64 	%rd26, [%rd4+16];
	st.global.u64 	[%rd25+48], %rd26;
	st.global.u64 	[%rd25+56], %rd3;

BB4_12:
	add.s32 	%r39, %r39, 1;
	setp.lt.u32	%p9, %r39, %r17;
	@%p9 bra 	BB4_5;

BB4_13:
	mov.u32 	%r36, %nctaid.x;
	mad.lo.s32 	%r38, %r20, %r36, %r38;
	setp.lt.u32	%p10, %r38, %r24;
	@%p10 bra 	BB4_2;

BB4_14:
	ret;
}


