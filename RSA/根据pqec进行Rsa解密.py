# -*- coding:utf-8 -*-
from Crypto.PublicKey import RSA
from Crypto.Cipher import PKCS1_v1_5 as Cipher_pkcs1_v1_5
import base64
import gmpy2
from libnum import n2s,s2n
message=""
key=""
def rsaEncode(message,key):
	rsakey=RSA.importKey(key)  #导入读取到的公匙
	cipher=Cipher_pkcs1_v1_5.new(rsakey) #生成对象
	cipher_text=base64.b64encode(cipher.encrypt(message.encode(encoding="utf-8")))
	print(cipher_text)
def rsaDecode(cipher_text,key):
	rsakey=RSA.importKey(key)  #导入私匙
	cipher = Cipher_pkcs1_v1_5.new(rsakey) #生成对象
	text = cipher.decrypt(base64.b64decode(cipher_text), "ERROR") 
	print (text)

#根据p q e c 进行解密
#
def decode():
	p = gmpy2.mpz(0x9703D6BF1C83E5283B493280E3023189C1FCEB)
	
	e = gmpy2.mpz(65537)
	
	
	#n=gmpy2.mpz(88823674699834945884673680518251167031710622232347533247855012752302681875831)
	q = gmpy2.mpz(0xD0E7CDA746B95CC87A9950A39D517741673BB5)
	n=q*p
	phi_n = (p - 1) * (q - 1)
	#phi_n=gmpy2.mpz(12751233068921660030612916837777215319379069282742136325030797062909672039089934934221239115485586280430590845472766049168697383450704700718782796213884777853521288190486273813470594846213362365214292304968173747351787497627548256390761835991421870385747500426523978371199522913178843735834456640845496344427395398489958112683630863655472157344730425041696114659641989881007569684657783143670345775421453015125096975736894328388304053351209164720711884543299538269782080125262879377841984490947037736073628163453677448757017879393251327788422188141054595457742661911138046885073801508554474982316067765454164812051813)
	d = gmpy2.invert(e, phi_n) #求倒数
	#d=4221909016509078129201801236879446760697885220928506696150646938237440992746683409881141451831939190609743447676525325543963362353923989076199470515758399
	print "private key:"
	print d

	c = gmpy2.mpz(0x448EEEBA1CF31BA2E9E22A9E6F37AB2C70A2E19485E819A8CB5D897E65B01DB6E692DD6D0B30)
	print "plaintext:"
	print n2s(pow(c,d,n))
	print pow(c,d,n)
	
#c="0x4061ad4082510ea185b2a221bd5b3f14fabcdd41fa1c118a12789de176cda574"
decode()
